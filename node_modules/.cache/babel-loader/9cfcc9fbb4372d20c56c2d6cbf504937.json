{"ast":null,"code":"import _slicedToArray from\"/Users/frankie/sparta/hanghae_react/magazine_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from\"react\";import{Text,Input,Grid,Button}from\"../elements\";import{useDispatch}from\"react-redux\";import{actionCreators as userActions}from\"../redux/modules/user\";// 이메일 형식 체크하는 함수를 가져옵니다.\nimport{emailCheck}from\"../shared/common\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Login=function Login(props){var dispatch=useDispatch();var _React$useState=React.useState(\"\"),_React$useState2=_slicedToArray(_React$useState,2),id=_React$useState2[0],setId=_React$useState2[1];var _React$useState3=React.useState(\"\"),_React$useState4=_slicedToArray(_React$useState3,2),pwd=_React$useState4[0],setPwd=_React$useState4[1];var login=function login(){//   아이디가 잘 들어와있나 아래 주석을 풀고 확인해보세요! :)\n// console.log(id);\n// 아이디와 패스워드가 있는 지 확인!\n// 미들웨어에서 처리해도 괜찮지만, 딱봐도 어림없는 값(공백 등등)이 굳이 미들웨어까지 갈 필요 없으니 여기에서 막아줄거예요.\nif(id&&pwd===\"\"){window.alert(\"비밀번호를 입력해주세요!\");return;}if(pwd&&id===\"\"){window.alert(\"아이디를 입력해주세요!\");return;}if(id===\"\"&&pwd===\"\"){window.alert(\"아이디와 비밀번호 모두 입력해주세요!\");return;}// id가 이메일 형식이 맞나 확인!\nif(!emailCheck(id)){window.alert(\"이메일 형식이 맞지 않습니다!\");return;}// 파이어베이스 로그인을 담당하는 함수를 디스패치했어요.\ndispatch(userActions.loginFB(id,pwd));};return/*#__PURE__*/_jsx(React.Fragment,{children:/*#__PURE__*/_jsxs(Grid,{padding:\"16px\",height:\"93.1vh\",children:[/*#__PURE__*/_jsx(Text,{size:\"32px\",bold:true,children:\"\\uB85C\\uADF8\\uC778\"}),/*#__PURE__*/_jsx(Grid,{padding:\"16px 0px\",children:/*#__PURE__*/_jsx(Input,{label:\"\\uC544\\uC774\\uB514\",placeholder:\"\\uC544\\uC774\\uB514\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",_onChange:function _onChange(e){setId(e.target.value);}})}),/*#__PURE__*/_jsx(Grid,{padding:\"16px 0px\",children:/*#__PURE__*/_jsx(Input,{label:\"\\uD328\\uC2A4\\uC6CC\\uB4DC\",placeholder:\"\\uD328\\uC2A4\\uC6CC\\uB4DC \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",type:\"password\",_onChange:function _onChange(e){setPwd(e.target.value);},value:pwd,is_submit:true,onSubmit:login})}),/*#__PURE__*/_jsx(Button,{_onClick:function _onClick(){login();},children:\"\\uB85C\\uADF8\\uC778\\uD558\\uAE30\"})]})});};export default Login;","map":{"version":3,"sources":["/Users/frankie/sparta/hanghae_react/magazine_test/src/pages/Login.js"],"names":["React","Text","Input","Grid","Button","useDispatch","actionCreators","userActions","emailCheck","Login","props","dispatch","useState","id","setId","pwd","setPwd","login","window","alert","loginFB","e","target","value"],"mappings":"wKAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,IAAT,CAAeC,KAAf,CAAsBC,IAAtB,CAA4BC,MAA5B,KAA0C,aAA1C,CAEA,OAASC,WAAT,KAA4B,aAA5B,CACA,OAASC,cAAc,GAAIC,CAAAA,WAA3B,KAA8C,uBAA9C,CAEA;AACA,OAASC,UAAT,KAA2B,kBAA3B,C,wFAEA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACC,KAAD,CAAW,CACvB,GAAMC,CAAAA,QAAQ,CAAGN,WAAW,EAA5B,CADuB,oBAGHL,KAAK,CAACY,QAAN,CAAe,EAAf,CAHG,oDAGhBC,EAHgB,qBAGZC,KAHY,0CAIDd,KAAK,CAACY,QAAN,CAAe,EAAf,CAJC,qDAIhBG,GAJgB,qBAIXC,MAJW,qBAMvB,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,EAAM,CAClB;AACA;AAEA;AACA;AACA,GAAIJ,EAAE,EAAIE,GAAG,GAAK,EAAlB,CAAsB,CACpBG,MAAM,CAACC,KAAP,CAAa,eAAb,EACA,OACD,CACD,GAAIJ,GAAG,EAAIF,EAAE,GAAK,EAAlB,CAAsB,CACpBK,MAAM,CAACC,KAAP,CAAa,cAAb,EACA,OACD,CACD,GAAIN,EAAE,GAAK,EAAP,EAAaE,GAAG,GAAK,EAAzB,CAA6B,CAC3BG,MAAM,CAACC,KAAP,CAAa,sBAAb,EACA,OACD,CAED;AACA,GAAI,CAACX,UAAU,CAACK,EAAD,CAAf,CAAqB,CACnBK,MAAM,CAACC,KAAP,CAAa,kBAAb,EACA,OACD,CAED;AACAR,QAAQ,CAACJ,WAAW,CAACa,OAAZ,CAAoBP,EAApB,CAAwBE,GAAxB,CAAD,CAAR,CACD,CA3BD,CA6BA,mBACE,KAAC,KAAD,CAAO,QAAP,wBACE,MAAC,IAAD,EAAM,OAAO,CAAC,MAAd,CAAqB,MAAM,CAAC,QAA5B,wBACE,KAAC,IAAD,EAAM,IAAI,CAAC,MAAX,CAAkB,IAAI,KAAtB,gCADF,cAKE,KAAC,IAAD,EAAM,OAAO,CAAC,UAAd,uBACE,KAAC,KAAD,EACE,KAAK,CAAC,oBADR,CAEE,WAAW,CAAC,gEAFd,CAGE,SAAS,CAAE,mBAACM,CAAD,CAAO,CAChBP,KAAK,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAAL,CACD,CALH,EADF,EALF,cAeE,KAAC,IAAD,EAAM,OAAO,CAAC,UAAd,uBACE,KAAC,KAAD,EACE,KAAK,CAAC,0BADR,CAEE,WAAW,CAAC,gEAFd,CAGE,IAAI,CAAC,UAHP,CAIE,SAAS,CAAE,mBAACF,CAAD,CAAO,CAChBL,MAAM,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAAN,CACD,CANH,CAOE,KAAK,CAAER,GAPT,CAQE,SAAS,KARX,CASE,QAAQ,CAAEE,KATZ,EADF,EAfF,cA6BE,KAAC,MAAD,EACE,QAAQ,CAAE,mBAAM,CACdA,KAAK,GACN,CAHH,4CA7BF,GADF,EADF,CAyCD,CA5ED,CA8EA,cAAeR,CAAAA,KAAf","sourcesContent":["import React from \"react\";\nimport { Text, Input, Grid, Button } from \"../elements\";\n\nimport { useDispatch } from \"react-redux\";\nimport { actionCreators as userActions } from \"../redux/modules/user\";\n\n// 이메일 형식 체크하는 함수를 가져옵니다.\nimport { emailCheck } from \"../shared/common\";\n\nconst Login = (props) => {\n  const dispatch = useDispatch();\n\n  const [id, setId] = React.useState(\"\");\n  const [pwd, setPwd] = React.useState(\"\");\n\n  const login = () => {\n    //   아이디가 잘 들어와있나 아래 주석을 풀고 확인해보세요! :)\n    // console.log(id);\n\n    // 아이디와 패스워드가 있는 지 확인!\n    // 미들웨어에서 처리해도 괜찮지만, 딱봐도 어림없는 값(공백 등등)이 굳이 미들웨어까지 갈 필요 없으니 여기에서 막아줄거예요.\n    if (id && pwd === \"\") {\n      window.alert(\"비밀번호를 입력해주세요!\");\n      return;\n    }\n    if (pwd && id === \"\") {\n      window.alert(\"아이디를 입력해주세요!\");\n      return;\n    }\n    if (id === \"\" && pwd === \"\") {\n      window.alert(\"아이디와 비밀번호 모두 입력해주세요!\");\n      return;\n    }\n\n    // id가 이메일 형식이 맞나 확인!\n    if (!emailCheck(id)) {\n      window.alert(\"이메일 형식이 맞지 않습니다!\");\n      return;\n    }\n\n    // 파이어베이스 로그인을 담당하는 함수를 디스패치했어요.\n    dispatch(userActions.loginFB(id, pwd));\n  };\n\n  return (\n    <React.Fragment>\n      <Grid padding=\"16px\" height=\"93.1vh\">\n        <Text size=\"32px\" bold>\n          로그인\n        </Text>\n\n        <Grid padding=\"16px 0px\">\n          <Input\n            label=\"아이디\"\n            placeholder=\"아이디를 입력해주세요.\"\n            _onChange={(e) => {\n              setId(e.target.value);\n            }}\n          />\n        </Grid>\n\n        <Grid padding=\"16px 0px\">\n          <Input\n            label=\"패스워드\"\n            placeholder=\"패스워드 입력해주세요.\"\n            type=\"password\"\n            _onChange={(e) => {\n              setPwd(e.target.value);\n            }}\n            value={pwd}\n            is_submit\n            onSubmit={login}\n          />\n        </Grid>\n\n        <Button\n          _onClick={() => {\n            login();\n          }}\n        >\n          로그인하기\n        </Button>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}