{"ast":null,"code":"var _jsxFileName = \"/Users/frankie/sparta/hanghae_react/magazine_test/src/pages/PostWrite.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Grid, Text, Button, Image, Input } from \"../elements\";\nimport Upload from \"../shared/Upload\";\nimport RadioBtn from \"../elements/RadioBtn\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { actionCreators as postActions } from \"../redux/modules/post\";\nimport { actionCreators as imageActions } from \"../redux/modules/image\"; //   게시글 수정과 작성을 이 컴포넌트 하나로 할거예요.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostWrite = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const is_login = useSelector(state => state.user.is_login);\n  const preview = useSelector(state => state.image.preview);\n  const post_list = useSelector(state => state.post.list); //   주소창을 보고 id값을 가져와요.\n\n  const post_id = props.match.params.id; //   post id를 가지고 수정모드인 지, 작성 모드인지 구분해줍니다.\n\n  const is_edit = post_id ? true : false;\n  const {\n    history\n  } = props; //   수정모드라면? 게시글 정보를 가져와요!\n  // 미리 어느정도 정보를 넣어주기 위해서 가져오는 거예요 :)\n\n  let _post = is_edit ? post_list.find(p => p.id === post_id) : null;\n\n  const [contents, setContents] = React.useState(_post ? _post.contents : \"\"); // const [layout_type, setLayoutType] = React.useState(\n  //   _post ? _post.layout_type : \"\"\n  // );\n\n  const [layout_type, setLayoutType] = React.useState(\"\");\n  const setDisabled = !layout_type || contents === \"\" ? true : false;\n  React.useEffect(() => {\n    // 수정모드인데, 게시글 정보가 없으면? 경고를 띄우고 뒤로 가게 합니다.\n    if (is_edit && !_post) {\n      window.alert(\"포스트 정보가 없어요!\");\n      history.goBack();\n      return;\n    } // 수정모드라면?\n    // 이미지 미리보기도 하나 넣어줘야죠!\n\n\n    if (is_edit) {\n      dispatch(imageActions.setPreview(_post.image_url));\n      console.log(_post);\n    }\n  }, []); //   내용을 바꿔주는 함수\n  // useState를 이용해요!\n\n  const changeContents = e => {\n    setContents(e.target.value);\n  }; // 레이아웃 타입을 정해주는 함수\n  // useState를 이용해요!\n\n\n  const changeLayoutType = event => {\n    setLayoutType(event.target.value);\n  }; //   게시글을 추가하는 함수\n\n\n  const addPost = () => {\n    dispatch(postActions.addPostFB(contents, layout_type));\n  }; //   게시글을 수정하는 함수\n\n\n  const editPost = () => {\n    dispatch(postActions.editPostFB(post_id, {\n      contents: contents\n    }));\n  }; //   로그인 하지 않았다면? 로그인 사용자만 작성할 수 있다는 화면을 보여줘요!\n\n\n  if (!is_login) {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      margin: \"100px 0px\",\n      padding: \"16px\",\n      center: true,\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        size: \"32px\",\n        bold: true,\n        children: \"\\uC557! \\uC7A0\\uAE50!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        size: \"16px\",\n        children: \"\\uB85C\\uADF8\\uC778 \\uD6C4\\uC5D0\\uB9CC \\uAE00\\uC744 \\uC4F8 \\uC218 \\uC788\\uC5B4\\uC694!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        _onClick: () => {\n          history.replace(\"/\");\n        },\n        children: \"\\uB85C\\uADF8\\uC778 \\uD558\\uB7EC\\uAC00\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      padding: \"16px\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        margin: \"0px\",\n        size: \"36px\",\n        bold: true,\n        children: is_edit ? \"게시글 수정\" : \"게시글 작성\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Upload, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        padding: \"16px\",\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          margin: \"0px\",\n          size: \"24px\",\n          bold: true,\n          children: [\"\\uBBF8\\uB9AC\\uBCF4\\uAE30\", /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontSize: '0.7em'\n            },\n            children: \"(\\uB808\\uC774\\uC544\\uC6C3 \\uC124\\uC815)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        is_flex: true,\n        children: [/*#__PURE__*/_jsxDEV(RadioBtn, {\n          type: \"radio\",\n          id: \"radio1\",\n          value: \"a\",\n          checked: layout_type === \"a\",\n          _onChange: changeLayoutType,\n          text: \"\\uD14D\\uC2A4\\uD2B8(\\uC0C1)) / \\uC774\\uBBF8\\uC9C0(\\uD558)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RadioBtn, {\n          type: \"radio\",\n          id: \"radio2\",\n          value: \"b\",\n          checked: layout_type === \"b\",\n          _onChange: changeLayoutType,\n          text: \"\\uD14D\\uC2A4\\uD2B8(\\uC88C) / \\uC774\\uBBF8\\uC9C0(\\uC6B0)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RadioBtn, {\n          type: \"radio\",\n          id: \"radio3\",\n          value: \"c\",\n          checked: layout_type === \"c\",\n          _onChange: changeLayoutType,\n          text: \"\\uC774\\uBBF8\\uC9C0(\\uC88C) / \\uD14D\\uC2A4\\uD2B8(\\uC6B0)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), layout_type === \"\" ? /*#__PURE__*/_jsxDEV(Image, {\n        shape: \"rectangle\",\n        src: preview ? preview : \"http://via.placeholder.com/400x300\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this) : \"\", layout_type === \"a\" ? /*#__PURE__*/_jsxDEV(Image, {\n        shape: \"AboveTxtBeneathImg\",\n        width: \"21em\",\n        height: \"20em\",\n        contents: contents,\n        src: preview ? preview : \"http://via.placeholder.com/400x300\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this) : \"\", layout_type === \"b\" ? /*#__PURE__*/_jsxDEV(Image, {\n        is_flex: true,\n        shape: \"leftTxtRightImg\",\n        contents: contents,\n        src: preview ? preview : \"http://via.placeholder.com/400x300\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this) : \"\", layout_type === \"c\" ? /*#__PURE__*/_jsxDEV(Image, {\n        is_flex: true,\n        shape: \"leftImgRightTxt\",\n        contents: contents,\n        src: preview ? preview : \"http://via.placeholder.com/400x300\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this) : \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      padding: \"16px\",\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        value: contents,\n        _onChange: changeContents,\n        label: \"\\uAC8C\\uC2DC\\uAE00 \\uB0B4\\uC6A9\",\n        placeholder: \"\\uAC8C\\uC2DC\\uAE00 \\uC791\\uC131\",\n        multiLine: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      padding: \"16px\",\n      children: is_edit ? /*#__PURE__*/_jsxDEV(Button, {\n        disabled: setDisabled,\n        _onClick: editPost,\n        children: \"\\uAC8C\\uC2DC\\uAE00 \\uC218\\uC815\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n        disabled: setDisabled,\n        _onClick: addPost,\n        children: \"\\uAC8C\\uC2DC\\uAE00 \\uC791\\uC131\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostWrite, \"LMyBxnGIqZfDH7wVpTWwMc0yIoY=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = PostWrite;\nexport default PostWrite;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostWrite\");","map":{"version":3,"sources":["/Users/frankie/sparta/hanghae_react/magazine_test/src/pages/PostWrite.js"],"names":["React","Grid","Text","Button","Image","Input","Upload","RadioBtn","useSelector","useDispatch","actionCreators","postActions","imageActions","PostWrite","props","dispatch","is_login","state","user","preview","image","post_list","post","list","post_id","match","params","id","is_edit","history","_post","find","p","contents","setContents","useState","layout_type","setLayoutType","setDisabled","useEffect","window","alert","goBack","setPreview","image_url","console","log","changeContents","e","target","value","changeLayoutType","event","addPost","addPostFB","editPost","editPostFB","replace","fontSize"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Grid, Text, Button, Image, Input } from \"../elements\";\nimport Upload from \"../shared/Upload\";\nimport RadioBtn from \"../elements/RadioBtn\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { actionCreators as postActions } from \"../redux/modules/post\";\nimport { actionCreators as imageActions } from \"../redux/modules/image\";\n\n//   게시글 수정과 작성을 이 컴포넌트 하나로 할거예요.\nconst PostWrite = (props) => {\n  const dispatch = useDispatch();\n  const is_login = useSelector((state) => state.user.is_login);\n  const preview = useSelector((state) => state.image.preview);\n  const post_list = useSelector((state) => state.post.list);\n\n  //   주소창을 보고 id값을 가져와요.\n  const post_id = props.match.params.id;\n  //   post id를 가지고 수정모드인 지, 작성 모드인지 구분해줍니다.\n  const is_edit = post_id ? true : false;\n\n  const { history } = props;\n\n  //   수정모드라면? 게시글 정보를 가져와요!\n  // 미리 어느정도 정보를 넣어주기 위해서 가져오는 거예요 :)\n  let _post = is_edit ? post_list.find((p) => p.id === post_id) : null;\n\n  const [contents, setContents] = React.useState(_post ? _post.contents : \"\");\n\n  // const [layout_type, setLayoutType] = React.useState(\n  //   _post ? _post.layout_type : \"\"\n  // );\n  const [layout_type, setLayoutType] = React.useState(\"\");\n  const setDisabled = (!layout_type || contents === \"\" )? true : false;\n  \n\n  React.useEffect(() => {\n    // 수정모드인데, 게시글 정보가 없으면? 경고를 띄우고 뒤로 가게 합니다.\n    if (is_edit && !_post) {\n      window.alert(\"포스트 정보가 없어요!\");\n      history.goBack();\n      return;\n    }\n\n    // 수정모드라면?\n    // 이미지 미리보기도 하나 넣어줘야죠!\n    if (is_edit) {\n      dispatch(imageActions.setPreview(_post.image_url));\n      console.log(_post);\n    }\n  }, []);\n\n  //   내용을 바꿔주는 함수\n  // useState를 이용해요!\n  const changeContents = (e) => {\n    setContents(e.target.value);\n  };\n\n  // 레이아웃 타입을 정해주는 함수\n  // useState를 이용해요!\n  const changeLayoutType = (event) => {\n    setLayoutType(event.target.value);\n  };\n\n  //   게시글을 추가하는 함수\n  const addPost = () => {\n    dispatch(postActions.addPostFB(contents, layout_type));\n  };\n\n  //   게시글을 수정하는 함수\n  const editPost = () => {\n    dispatch(postActions.editPostFB(post_id, { contents: contents }));\n  };\n\n  //   로그인 하지 않았다면? 로그인 사용자만 작성할 수 있다는 화면을 보여줘요!\n  if (!is_login) {\n    return (\n      <Grid margin=\"100px 0px\" padding=\"16px\" center>\n        <Text size=\"32px\" bold>\n          앗! 잠깐!\n        </Text>\n        <Text size=\"16px\">로그인 후에만 글을 쓸 수 있어요!</Text>\n        <Button\n          _onClick={() => {\n            history.replace(\"/\");\n          }}\n        >\n          로그인 하러가기\n        </Button>\n      </Grid>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <Grid padding=\"16px\">\n        <Text margin=\"0px\" size=\"36px\" bold>\n          {is_edit ? \"게시글 수정\" : \"게시글 작성\"}\n        </Text>\n        <Upload />\n      </Grid>\n\n      <Grid>\n        <Grid padding=\"16px\">\n          <Text margin=\"0px\" size=\"24px\" bold>\n            미리보기<span style={{fontSize: '0.7em'}}>(레이아웃 설정)</span>\n          </Text>\n        </Grid>\n\n        <Grid is_flex>\n          <RadioBtn\n            type=\"radio\"\n            id=\"radio1\"\n            value=\"a\"\n            checked={layout_type === \"a\"}\n            _onChange={changeLayoutType}\n            text=\"텍스트(상)) / 이미지(하)\"\n          />\n\n          <RadioBtn\n            type=\"radio\"\n            id=\"radio2\"\n            value=\"b\"\n            checked={layout_type === \"b\"}\n            _onChange={changeLayoutType}\n            text=\"텍스트(좌) / 이미지(우)\"\n          />\n\n          <RadioBtn\n            type=\"radio\"\n            id=\"radio3\"\n            value=\"c\"\n            checked={layout_type === \"c\"}\n            _onChange={changeLayoutType}\n            text=\"이미지(좌) / 텍스트(우)\"\n          />\n        </Grid>\n\n        {layout_type === \"\" ? (\n          <Image\n            shape=\"rectangle\"\n            src={preview ? preview : \"http://via.placeholder.com/400x300\"}\n          />\n        ) : (\n          \"\"\n        )}\n\n        {layout_type === \"a\" ? (\n          <Image\n            shape=\"AboveTxtBeneathImg\"\n            width=\"21em\"\n            height=\"20em\"\n            contents={contents}\n            src={preview ? preview : \"http://via.placeholder.com/400x300\"}\n          />\n        ) : (\n          \"\"\n        )}\n\n        {layout_type === \"b\" ? (\n          <Image\n            is_flex\n            shape=\"leftTxtRightImg\"\n            contents={contents}\n            src={preview ? preview : \"http://via.placeholder.com/400x300\"}\n          />\n        ) : (\n          \"\"\n        )}\n\n        {layout_type === \"c\" ? (\n          <Image\n            is_flex\n            shape=\"leftImgRightTxt\"\n            contents={contents}\n            src={preview ? preview : \"http://via.placeholder.com/400x300\"}\n          />\n        ) : (\n          \"\"\n        )}\n      </Grid>\n\n      <Grid padding=\"16px\">\n        <Input\n          value={contents}\n          _onChange={changeContents}\n          label=\"게시글 내용\"\n          placeholder=\"게시글 작성\"\n          multiLine\n        />\n      </Grid>\n\n      <Grid padding=\"16px\">\n        {is_edit ? (\n          <Button disabled={setDisabled} _onClick={editPost}>게시글 수정</Button>\n        ) : (\n          <Button disabled={setDisabled} _onClick={addPost}>게시글 작성</Button>\n        )}\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default PostWrite;\n"]},"metadata":{},"sourceType":"module"}