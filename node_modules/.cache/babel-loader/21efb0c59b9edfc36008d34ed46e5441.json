{"ast":null,"code":"var _jsxFileName = \"/Users/frankie/sparta/hanghae_react/magazine_test/src/components/HeartButton.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport styled from \"styled-components\"; // 분홍 하트, 회색 하트 이미지 가져오기\n\nimport heart_pink from \"../shared/heart_pink.png\";\nimport heart_gray from \"../shared/heart_gray.png\";\nimport { history } from \"../redux/configureStore\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { actionCreators as likeActions } from \"../redux/modules/like\"; // 하트 버튼은 일단 모양새만 잡아줄거예요!\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HeartButton = props => {\n  _s();\n\n  // const grayHeart = useSelector((state) => state.post.initialPost.like_cnt);\n  // console.log(grayHeart);\n  const dispatch = useDispatch();\n  console.log(props);\n  const like_list = useSelector(state => state.like.list);\n  const user_info = useSelector(state => state.user.user);\n  const {\n    _onClick,\n    _onChange,\n    like\n  } = props;\n  const styles = {};\n\n  const updateHeart = () => {\n    var _like_list$post_id, _like_list$post_id2;\n\n    if (!user_info) {\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        margin: \"100px 0px\",\n        padding: \"16px\",\n        center: true,\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          size: \"32px\",\n          bold: true,\n          children: \"\\uC557 \\uC7A0\\uAE50!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          size: \"16px\",\n          children: \"\\uB85C\\uADF8\\uC778 \\uD6C4\\uC5D0\\uB9CC \\uAE00\\uC744 \\uC4F8 \\uC218 \\uC788\\uC5B4\\uC694!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          _onClick: () => {\n            history.replace(\"/login\");\n          },\n          children: \"\\uB85C\\uADF8\\uC778 \\uD558\\uB7EC \\uAC00\\uAE30!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this);\n    } else if (!((_like_list$post_id = like_list[post_id]) === null || _like_list$post_id === void 0 ? void 0 : _like_list$post_id.includes(user_info.uid))) {\n      dispatch(likeActions.addLikeFB(post_id));\n    } else if ((_like_list$post_id2 = like_list[post_id]) === null || _like_list$post_id2 === void 0 ? void 0 : _like_list$post_id2.includes(user_info.uid)) {\n      dispatch(likeActions.cancelLikeFB(post_id));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Heart, {\n      icon_url: like ? heart_pink : heart_gray,\n      onClick: _onClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HeartButton, \"oVkNBczFP/XaLS8CKMm6BYXoE24=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = HeartButton;\nHeartButton.defaultProps = {\n  _onClick: () => {},\n  _onChange: () => {},\n  like: false\n};\nconst Heart = styled.div`\n  width: 30px;\n  height: 30px;\n  display: flex;\n  background: url(${props => props.icon_url});\n  background-size: cover;\n  cursor: pointer;\n`;\n_c2 = Heart;\nexport default HeartButton;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"HeartButton\");\n$RefreshReg$(_c2, \"Heart\");","map":{"version":3,"sources":["/Users/frankie/sparta/hanghae_react/magazine_test/src/components/HeartButton.js"],"names":["React","styled","heart_pink","heart_gray","history","useDispatch","useSelector","actionCreators","likeActions","HeartButton","props","dispatch","console","log","like_list","state","like","list","user_info","user","_onClick","_onChange","styles","updateHeart","replace","post_id","includes","uid","addLikeFB","cancelLikeFB","defaultProps","Heart","div","icon_url"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CAEA;;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AAEA,SAASC,OAAT,QAAwB,yBAAxB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,cAAc,IAAIC,WAA3B,QAA8C,uBAA9C,C,CAEA;;;;AACA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B;AACA;AACA,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACA,QAAMI,SAAS,GAAGR,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWC,IAAvB,CAA7B;AACA,QAAMC,SAAS,GAAGZ,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACI,IAAN,CAAWA,IAAvB,CAA7B;AAEA,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,SAAZ;AAAuBL,IAAAA;AAAvB,MAAgCN,KAAtC;AACA,QAAMY,MAAM,GAAG,EAAf;;AAEA,QAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAI,CAACL,SAAL,EAAgB;AACd,0BACE,QAAC,IAAD;AAAM,QAAA,MAAM,EAAC,WAAb;AAAyB,QAAA,OAAO,EAAC,MAAjC;AAAwC,QAAA,MAAM,MAA9C;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,IAAI,EAAC,MAAX;AAAkB,UAAA,IAAI,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,IAAD;AAAM,UAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE,QAAC,MAAD;AACE,UAAA,QAAQ,EAAE,MAAM;AACdd,YAAAA,OAAO,CAACoB,OAAR,CAAgB,QAAhB;AACD,WAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAeD,KAhBD,MAgBO,IAAI,wBAACV,SAAS,CAACW,OAAD,CAAV,uDAAC,mBAAoBC,QAApB,CAA6BR,SAAS,CAACS,GAAvC,CAAD,CAAJ,EAAkD;AACvDhB,MAAAA,QAAQ,CAACH,WAAW,CAACoB,SAAZ,CAAsBH,OAAtB,CAAD,CAAR;AACD,KAFM,MAEA,2BAAIX,SAAS,CAACW,OAAD,CAAb,wDAAI,oBAAoBC,QAApB,CAA6BR,SAAS,CAACS,GAAvC,CAAJ,EAAiD;AACtDhB,MAAAA,QAAQ,CAACH,WAAW,CAACqB,YAAZ,CAAyBJ,OAAzB,CAAD,CAAR;AACD;AACF,GAtBD;;AAwBA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,2BACE,QAAC,KAAD;AAAO,MAAA,QAAQ,EAAET,IAAI,GAAEd,UAAF,GAAeC,UAApC;AAAgD,MAAA,OAAO,EAAEiB;AAAzD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAxCD;;GAAMX,W;UAGaJ,W,EAECC,W,EACAA,W;;;KANdG,W;AAyCNA,WAAW,CAACqB,YAAZ,GAA2B;AACzBV,EAAAA,QAAQ,EAAE,MAAM,CAAE,CADO;AAEzBC,EAAAA,SAAS,EAAE,MAAM,CAAE,CAFM;AAGzBL,EAAAA,IAAI,EAAE;AAHmB,CAA3B;AAKA,MAAMe,KAAK,GAAG9B,MAAM,CAAC+B,GAAI;AACzB;AACA;AACA;AACA,oBAAqBtB,KAAD,IAAWA,KAAK,CAACuB,QAAS;AAC9C;AACA;AACA,CAPA;MAAMF,K;AASN,eAAetB,WAAf","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\n// 분홍 하트, 회색 하트 이미지 가져오기\nimport heart_pink from \"../shared/heart_pink.png\";\nimport heart_gray from \"../shared/heart_gray.png\";\n\nimport { history } from \"../redux/configureStore\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { actionCreators as likeActions } from \"../redux/modules/like\";\n\n// 하트 버튼은 일단 모양새만 잡아줄거예요!\nconst HeartButton = (props) => {\n  // const grayHeart = useSelector((state) => state.post.initialPost.like_cnt);\n  // console.log(grayHeart);\n  const dispatch = useDispatch();\n  console.log(props);\n  const like_list = useSelector((state) => state.like.list);\n  const user_info = useSelector((state) => state.user.user);\n\n  const { _onClick, _onChange, like } = props;\n  const styles = {};\n  \n  const updateHeart = () => {\n    if (!user_info) {\n      return (\n        <Grid margin=\"100px 0px\" padding=\"16px\" center>\n          <Text size=\"32px\" bold>\n            앗 잠깐!\n          </Text>\n          <Text size=\"16px\">로그인 후에만 글을 쓸 수 있어요!</Text>\n          <Button\n            _onClick={() => {\n              history.replace(\"/login\");\n            }}\n          >\n            로그인 하러 가기!\n          </Button>\n        </Grid>\n      );\n    } else if (!like_list[post_id]?.includes(user_info.uid)) {\n      dispatch(likeActions.addLikeFB(post_id));\n    } else if (like_list[post_id]?.includes(user_info.uid)) {\n      dispatch(likeActions.cancelLikeFB(post_id));\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <Heart icon_url={like? heart_pink : heart_gray} onClick={_onClick}></Heart>\n    </React.Fragment>\n  );\n};\nHeartButton.defaultProps = {\n  _onClick: () => {},\n  _onChange: () => {},\n  like: false,\n};\nconst Heart = styled.div`\n  width: 30px;\n  height: 30px;\n  display: flex;\n  background: url(${(props) => props.icon_url});\n  background-size: cover;\n  cursor: pointer;\n`;\n\nexport default HeartButton;\n"]},"metadata":{},"sourceType":"module"}