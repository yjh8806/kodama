{"ast":null,"code":"import React from\"react\";import{useSelector}from\"react-redux\";import{apiKey}from\"./firebase\";// 로그인을 했는 지(권한이 있는 지) 확인해서 children으로 받은 내용물을 보여줄 지 말지 결정하는 컴포넌트예요! :)\n// React.memo는 메모이제이션을 통해 컴포넌트가 여러번 렌더링 되지 않도록 막아줘요.\n// 내용이 기억나지 않으시면 5주차를 참고해주세요! 혹은 구글에 React.memo를 검색해보세요!\nimport{jsx as _jsx}from\"react/jsx-runtime\";var Permit=/*#__PURE__*/React.memo(function(props){var is_login=useSelector(function(state){return state.user.is_login;});var _session_key=\"firebase:authUser:\".concat(apiKey,\":[DEFAULT]\");var is_session=sessionStorage.getItem(_session_key)?true:false;//   세션과 리덕스 내 로그인 여부 값을 사용해 로그인했는 지 여부를 판단합니다!\nif(is_session&&is_login){return/*#__PURE__*/_jsx(React.Fragment,{children:props.children});}return null;});export default Permit;","map":{"version":3,"sources":["/Users/frankie/sparta/hanghae_react/magazine_test/src/shared/Permit.js"],"names":["React","useSelector","apiKey","Permit","memo","props","is_login","state","user","_session_key","is_session","sessionStorage","getItem","children"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,OAASC,MAAT,KAAuB,YAAvB,CAEA;AACA;AACA;2CACA,GAAMC,CAAAA,MAAM,cAAGH,KAAK,CAACI,IAAN,CAAW,SAACC,KAAD,CAAW,CACnC,GAAMC,CAAAA,QAAQ,CAAGL,WAAW,CAAC,SAACM,KAAD,QAAWA,CAAAA,KAAK,CAACC,IAAN,CAAWF,QAAtB,EAAD,CAA5B,CAEA,GAAMG,CAAAA,YAAY,6BAAwBP,MAAxB,cAAlB,CAEA,GAAMQ,CAAAA,UAAU,CAAGC,cAAc,CAACC,OAAf,CAAuBH,YAAvB,EAAuC,IAAvC,CAA8C,KAAjE,CAEF;AACE,GAAIC,UAAU,EAAIJ,QAAlB,CAA4B,CAC1B,mBAAO,KAAC,KAAD,CAAO,QAAP,WAAiBD,KAAK,CAACQ,QAAvB,EAAP,CACD,CAED,MAAO,KAAP,CACD,CAbc,CAAf,CAeA,cAAeV,CAAAA,MAAf","sourcesContent":["import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { apiKey } from \"./firebase\";\n\n// 로그인을 했는 지(권한이 있는 지) 확인해서 children으로 받은 내용물을 보여줄 지 말지 결정하는 컴포넌트예요! :)\n// React.memo는 메모이제이션을 통해 컴포넌트가 여러번 렌더링 되지 않도록 막아줘요.\n// 내용이 기억나지 않으시면 5주차를 참고해주세요! 혹은 구글에 React.memo를 검색해보세요!\nconst Permit = React.memo((props) => {\n  const is_login = useSelector((state) => state.user.is_login);\n\n  const _session_key = `firebase:authUser:${apiKey}:[DEFAULT]`;\n\n  const is_session = sessionStorage.getItem(_session_key) ? true : false;\n\n//   세션과 리덕스 내 로그인 여부 값을 사용해 로그인했는 지 여부를 판단합니다!\n  if (is_session && is_login) {\n    return <React.Fragment>{props.children}</React.Fragment>;\n  }\n\n  return null;\n});\n\nexport default Permit;\n"]},"metadata":{},"sourceType":"module"}