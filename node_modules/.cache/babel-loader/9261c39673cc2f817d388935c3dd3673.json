{"ast":null,"code":"var _jsxFileName = \"/Users/frankie/sparta/hanghae_react/magazine_test/src/elements/Button.js\";\nimport React from \"react\";\nimport styled from \"styled-components\"; // 버튼 컴포넌트\n\n/**\n *\n * @param {*} props\n * - _onClick : 버튼 클릭 시 실행할 함수\n * - _is_float : 플로팅 버튼인지 아닌 지 여부 boolean\n * - children : 열림 태그와 닫힘 태그 사이에 들어가는 자식 노드 / ex) <>여기에 들어가는 게 자식 노드!</>\n * - margin : margin 값 (px 등 단위를 포함한 string)\n * - width : width 값 (px 등 단위를 포함한 string)\n * - padding : padding 값 (px 등 단위를 포함한 string)\n * @returns\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Button = props => {\n  const {\n    _onClick,\n    is_float,\n    children,\n    margin,\n    width,\n    padding,\n    borderRadius\n  } = props; //   is_float가 true면 플로팅 버튼을 반환합니다.\n  // return 이후의 구문은 읽지 않으니, else는 굳이 쓰지 않아도 괜찮아요!\n\n  if (is_float) {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(FloatButton, {\n        onClick: _onClick,\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this);\n  } //   스타일드 컴포넌트에 보낼 내용만 따로 묶어주면 return에 들어갈 코드가 좀 더 깔끔해집니다!\n\n\n  const styles = {\n    margin: margin,\n    width: width,\n    padding: padding,\n    borderRadius: borderRadius\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ElButton, { ...styles,\n      onClick: _onClick,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}; // props가 넘어오지 않아도 화면이 잘 그려지도록 기본 값 넣어주기\n\n\n_c = Button;\nButton.defaultProps = {\n  children: null,\n  _onClick: () => {},\n  is_float: false,\n  margin: false,\n  width: \"100%\",\n  padding: \"12px 0px\",\n  borderRadius: false\n};\nconst ElButton = styled.button`\n  width: ${props => props.width};\n  background-color: #212121;\n  color: #ffffff;\n  padding: ${props => props.padding};\n  box-sizing: border-box;\n  border: none;\n  ${props => props.margin ? `margin: ${props.margin};` : \"\"}\n  ${props => props.margin ? `margin: ${props.margin};` : \"\"}\n`;\n_c2 = ElButton;\nconst FloatButton = styled.button`\n  width: 50px;\n  height: 50px;\n  background-color: #212121;\n  color: #ffffff;\n  box-sizing: border-box;\n  font-size: 36px;\n  font-weight: 800;\n  position: fixed;\n  bottom: 50px;\n  right: 16px;\n  text-align: center;\n  vertical-align: middle;\n  border: none;\n  border-radius: 50px;\n`;\n_c3 = FloatButton;\nexport default Button;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"ElButton\");\n$RefreshReg$(_c3, \"FloatButton\");","map":{"version":3,"sources":["/Users/frankie/sparta/hanghae_react/magazine_test/src/elements/Button.js"],"names":["React","styled","Button","props","_onClick","is_float","children","margin","width","padding","borderRadius","styles","defaultProps","ElButton","button","FloatButton"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACxB,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,QAAZ;AAAsBC,IAAAA,QAAtB;AAAgCC,IAAAA,MAAhC;AAAwCC,IAAAA,KAAxC;AAA+CC,IAAAA,OAA/C;AAAwDC,IAAAA;AAAxD,MAAyEP,KAA/E,CADwB,CAGxB;AACA;;AACA,MAAIE,QAAJ,EAAc;AACZ,wBACE,QAAC,KAAD,CAAO,QAAP;AAAA,6BACE,QAAC,WAAD;AAAa,QAAA,OAAO,EAAED,QAAtB;AAAA,kBAAiCE;AAAjC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD,GAXuB,CAaxB;;;AACA,QAAMK,MAAM,GAAG;AACbJ,IAAAA,MAAM,EAAEA,MADK;AAEbC,IAAAA,KAAK,EAAEA,KAFM;AAGbC,IAAAA,OAAO,EAAEA,OAHI;AAIbC,IAAAA,YAAY,EAAEA;AAJD,GAAf;AAOA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,2BACE,QAAC,QAAD,OAAcC,MAAd;AAAsB,MAAA,OAAO,EAAEP,QAA/B;AAAA,gBACGE;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CA5BD,C,CA8BA;;;KA9BMJ,M;AA+BNA,MAAM,CAACU,YAAP,GAAsB;AACpBN,EAAAA,QAAQ,EAAE,IADU;AAEpBF,EAAAA,QAAQ,EAAE,MAAM,CAAE,CAFE;AAGpBC,EAAAA,QAAQ,EAAE,KAHU;AAIpBE,EAAAA,MAAM,EAAE,KAJY;AAKpBC,EAAAA,KAAK,EAAE,MALa;AAMpBC,EAAAA,OAAO,EAAE,UANW;AAOpBC,EAAAA,YAAY,EAAE;AAPM,CAAtB;AAUA,MAAMG,QAAQ,GAAGZ,MAAM,CAACa,MAAO;AAC/B,WAAYX,KAAD,IAAWA,KAAK,CAACK,KAAM;AAClC;AACA;AACA,aAAcL,KAAD,IAAWA,KAAK,CAACM,OAAQ;AACtC;AACA;AACA,IAAKN,KAAD,IAAYA,KAAK,CAACI,MAAN,GAAgB,WAAUJ,KAAK,CAACI,MAAO,GAAvC,GAA4C,EAAI;AAChE,IAAKJ,KAAD,IAAYA,KAAK,CAACI,MAAN,GAAgB,WAAUJ,KAAK,CAACI,MAAO,GAAvC,GAA4C,EAAI;AAChE,CATA;MAAMM,Q;AAWN,MAAME,WAAW,GAAGd,MAAM,CAACa,MAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAfA;MAAMC,W;AAiBN,eAAeb,MAAf","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\n// 버튼 컴포넌트\n/**\n *\n * @param {*} props\n * - _onClick : 버튼 클릭 시 실행할 함수\n * - _is_float : 플로팅 버튼인지 아닌 지 여부 boolean\n * - children : 열림 태그와 닫힘 태그 사이에 들어가는 자식 노드 / ex) <>여기에 들어가는 게 자식 노드!</>\n * - margin : margin 값 (px 등 단위를 포함한 string)\n * - width : width 값 (px 등 단위를 포함한 string)\n * - padding : padding 값 (px 등 단위를 포함한 string)\n * @returns\n */\nconst Button = (props) => {\n  const { _onClick, is_float, children, margin, width, padding, borderRadius } = props;\n\n  //   is_float가 true면 플로팅 버튼을 반환합니다.\n  // return 이후의 구문은 읽지 않으니, else는 굳이 쓰지 않아도 괜찮아요!\n  if (is_float) {\n    return (\n      <React.Fragment>\n        <FloatButton onClick={_onClick}>{children}</FloatButton>\n      </React.Fragment>\n    );\n  }\n\n  //   스타일드 컴포넌트에 보낼 내용만 따로 묶어주면 return에 들어갈 코드가 좀 더 깔끔해집니다!\n  const styles = {\n    margin: margin,\n    width: width,\n    padding: padding,\n    borderRadius: borderRadius,\n  };\n\n  return (\n    <React.Fragment>\n      <ElButton {...styles} onClick={_onClick}>\n        {children}\n      </ElButton>\n    </React.Fragment>\n  );\n};\n\n// props가 넘어오지 않아도 화면이 잘 그려지도록 기본 값 넣어주기\nButton.defaultProps = {\n  children: null,\n  _onClick: () => {},\n  is_float: false,\n  margin: false,\n  width: \"100%\",\n  padding: \"12px 0px\",\n  borderRadius: false,\n};\n\nconst ElButton = styled.button`\n  width: ${(props) => props.width};\n  background-color: #212121;\n  color: #ffffff;\n  padding: ${(props) => props.padding};\n  box-sizing: border-box;\n  border: none;\n  ${(props) => (props.margin ? `margin: ${props.margin};` : \"\")}\n  ${(props) => (props.margin ? `margin: ${props.margin};` : \"\")}\n`;\n\nconst FloatButton = styled.button`\n  width: 50px;\n  height: 50px;\n  background-color: #212121;\n  color: #ffffff;\n  box-sizing: border-box;\n  font-size: 36px;\n  font-weight: 800;\n  position: fixed;\n  bottom: 50px;\n  right: 16px;\n  text-align: center;\n  vertical-align: middle;\n  border: none;\n  border-radius: 50px;\n`;\n\nexport default Button;\n"]},"metadata":{},"sourceType":"module"}