{"ast":null,"code":"var _jsxFileName = \"/Users/frankie/sparta/hanghae_react/magazine_test/src/components/HeartButton.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Text, Grid, Button } from \"../elements\";\nimport styled from \"styled-components\"; // 분홍 하트, 회색 하트 이미지 가져오기\n\nimport heart_pink from \"../shared/heart_pink.png\";\nimport heart_gray from \"../shared/heart_gray.png\";\nimport { history } from \"../redux/configureStore\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { actionCreators as likeActions } from \"../redux/modules/like\"; // 하트 버튼은 일단 모양새만 잡아줄거예요!\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HeartButton = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  console.log(props);\n  const like_list = useSelector(state => state.like.list);\n  const user_info = useSelector(state => state.user.user);\n  const {\n    _onClick,\n    _onChange,\n    like,\n    post_id\n  } = props;\n  const styles = {};\n  React.useEffect(() => {\n    var _like_list$post_id;\n\n    // if (like_list[post_id]?.includes(user_info?.uid)) {\n    if ((_like_list$post_id = like_list[post_id]) === null || _like_list$post_id === void 0 ? void 0 : _like_list$post_id.includes(user_info === null || user_info === void 0 ? void 0 : user_info.uid)) {\n      setLike(true);\n    } else {\n      setLike(false);\n    }\n  }, []);\n  const [islike, setLike] = React.useState(false);\n\n  const updateHeart = () => {\n    var _like_list$post_id2, _like_list$post_id3;\n\n    if (!user_info) {\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        margin: \"100px 0px\",\n        padding: \"16px\",\n        center: true,\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          size: \"32px\",\n          bold: true,\n          children: \"\\uC557 \\uC7A0\\uAE50!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          size: \"16px\",\n          children: \"\\uB85C\\uADF8\\uC778 \\uD6C4\\uC5D0\\uB9CC \\uAE00\\uC744 \\uC4F8 \\uC218 \\uC788\\uC5B4\\uC694!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          _onClick: () => {\n            history.replace(\"/login\");\n          },\n          children: \"\\uB85C\\uADF8\\uC778 \\uD558\\uB7EC \\uAC00\\uAE30!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this);\n    } else if (!((_like_list$post_id2 = like_list[post_id]) === null || _like_list$post_id2 === void 0 ? void 0 : _like_list$post_id2.includes(user_info.uid))) {\n      dispatch(likeActions.addLikeFB(post_id));\n    } else if ((_like_list$post_id3 = like_list[post_id]) === null || _like_list$post_id3 === void 0 ? void 0 : _like_list$post_id3.includes(user_info.uid)) {\n      dispatch(likeActions.unLikeFB(post_id));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: updateHeart,\n    children: islike ? /*#__PURE__*/_jsxDEV(Heart, {\n      icon_url: heart_pink\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 16\n    }, this) : /*#__PURE__*/_jsxDEV(Heart, {\n      icon_url: heart_gray\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 49\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HeartButton, \"NgFmKXTXIrJPtHliETRS6z3y/bs=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = HeartButton;\nHeartButton.defaultProps = {\n  _onClick: () => {},\n  _onChange: () => {},\n  like: false\n};\nconst Heart = styled.div`\n  width: 30px;\n  height: 30px;\n  display: flex;\n  background: url(${props => props.icon_url});\n  background-size: cover;\n  cursor: pointer;\n`;\n_c2 = Heart;\nexport default HeartButton;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"HeartButton\");\n$RefreshReg$(_c2, \"Heart\");","map":{"version":3,"sources":["/Users/frankie/sparta/hanghae_react/magazine_test/src/components/HeartButton.js"],"names":["React","Text","Grid","Button","styled","heart_pink","heart_gray","history","useDispatch","useSelector","actionCreators","likeActions","HeartButton","props","dispatch","console","log","like_list","state","like","list","user_info","user","_onClick","_onChange","post_id","styles","useEffect","includes","uid","setLike","islike","useState","updateHeart","replace","addLikeFB","unLikeFB","defaultProps","Heart","div","icon_url"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Text, Grid, Button } from \"../elements\";\nimport styled from \"styled-components\";\n\n// 분홍 하트, 회색 하트 이미지 가져오기\nimport heart_pink from \"../shared/heart_pink.png\";\nimport heart_gray from \"../shared/heart_gray.png\";\n\nimport { history } from \"../redux/configureStore\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { actionCreators as likeActions } from \"../redux/modules/like\";\n\n// 하트 버튼은 일단 모양새만 잡아줄거예요!\nconst HeartButton = (props) => {\n  const dispatch = useDispatch();\n  console.log(props);\n  const like_list = useSelector((state) => state.like.list);\n  const user_info = useSelector((state) => state.user.user);\n\n  const { _onClick, _onChange, like, post_id } = props;\n  const styles = {}\n\n  React.useEffect(() => {\n    // if (like_list[post_id]?.includes(user_info?.uid)) {\n    if (like_list[post_id]?.includes(user_info?.uid)) {\n      setLike(true);\n    } else {\n      setLike(false);\n    }\n  },[]);\n\n  const [islike, setLike] = React.useState(false);\n  const updateHeart = () => {\n    if (!user_info) {\n      return (\n        <Grid margin=\"100px 0px\" padding=\"16px\" center>\n          <Text size=\"32px\" bold>\n            앗 잠깐!\n          </Text>\n          <Text size=\"16px\">로그인 후에만 글을 쓸 수 있어요!</Text>\n          <Button\n            _onClick={() => {\n              history.replace(\"/login\");\n            }}\n          >\n            로그인 하러 가기!\n          </Button>\n        </Grid>\n      );\n    } else if (!like_list[post_id]?.includes(user_info.uid)) {\n      dispatch(likeActions.addLikeFB(post_id));\n    } else if (like_list[post_id]?.includes(user_info.uid)) {\n      dispatch(likeActions.unLikeFB(post_id));\n    }\n  };\n\n  return (\n    <div onClick={updateHeart}>\n      {/* <Heart icon_url={like? heart_pink : heart_gray} onClick={_onClick}></Heart> */}\n      {islike? <Heart icon_url={heart_pink}/> : <Heart icon_url={heart_gray}/> }\n    </div>\n  );\n};\nHeartButton.defaultProps = {\n  _onClick: () => {},\n  _onChange: () => {},\n  like: false,\n};\nconst Heart = styled.div`\n  width: 30px;\n  height: 30px;\n  display: flex;\n  background: url(${(props) => props.icon_url});\n  background-size: cover;\n  cursor: pointer;\n`;\n\nexport default HeartButton;\n"]},"metadata":{},"sourceType":"module"}