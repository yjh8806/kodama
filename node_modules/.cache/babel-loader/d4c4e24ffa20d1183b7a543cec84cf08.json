{"ast":null,"code":"var _jsxFileName = \"/Users/frankie/sparta/hanghae_react/magazine_test/src/shared/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport React from \"react\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport { history } from \"../redux/configureStore\";\nimport { Login, Signup, PostDetail, PostList, PostWrite } from \"../pages\";\nimport { Header } from \"../components\";\nimport { Grid, Button } from \"../elements\";\nimport { useDispatch } from \"react-redux\";\nimport { actionCreators as userActions } from \"../redux/modules/user\";\nimport { apiKey } from \"./firebase\";\nimport { Route } from \"react-router-dom\";\nimport Permit from \"./Permit\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const dispatch = useDispatch();\n  const _session_key = `firebase:authUser:${apiKey}:[DEFAULT]`;\n  const is_session = sessionStorage.getItem(_session_key) ? true : false;\n  React.useEffect(() => {\n    if (is_session) {\n      dispatch(userActions.loginCheckFB());\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      children: /*#__PURE__*/_jsxDEV(ConnectedRouter, {\n        history: history,\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          exact: true,\n          component: PostList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          exact: true,\n          component: Login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signup\",\n          exact: true,\n          component: Signup\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/write\",\n          exact: true,\n          component: PostWrite\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/write/:id\",\n          exact: true,\n          component: PostWrite\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/post/:id\",\n          exact: true,\n          component: PostDetail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Permit, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        is_float: true,\n        _onClick: () => {\n          history.push(\"/write\");\n        },\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/frankie/sparta/hanghae_react/magazine_test/src/shared/App.js"],"names":["React","ConnectedRouter","history","Login","Signup","PostDetail","PostList","PostWrite","Header","Grid","Button","useDispatch","actionCreators","userActions","apiKey","Route","Permit","App","dispatch","_session_key","is_session","sessionStorage","getItem","useEffect","loginCheckFB","push"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,eAAT,QAAgC,wBAAhC;AACA,SAASC,OAAT,QAAwB,yBAAxB;AAEA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,UAAxB,EAAoCC,QAApC,EAA8CC,SAA9C,QAA+D,UAA/D;AAEA,SAASC,MAAT,QAAuB,eAAvB;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,aAA7B;AAEA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,cAAc,IAAIC,WAA3B,QAA8C,uBAA9C;AAEA,SAASC,MAAT,QAAuB,YAAvB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AAEA,OAAOC,MAAP,MAAmB,UAAnB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AAEA,QAAMQ,YAAY,GAAI,qBAAoBL,MAAO,YAAjD;AACA,QAAMM,UAAU,GAAGC,cAAc,CAACC,OAAf,CAAuBH,YAAvB,IAAuC,IAAvC,GAA8C,KAAjE;AAEAnB,EAAAA,KAAK,CAACuB,SAAN,CAAgB,MAAM;AACpB,QAAIH,UAAJ,EAAgB;AACdF,MAAAA,QAAQ,CAACL,WAAW,CAACW,YAAZ,EAAD,CAAR;AACD;AACF,GAJD,EAIG,EAJH;AAMA,sBACE,QAAC,IAAD;AAAA,4BACE,QAAC,IAAD;AAAA,6BACE,QAAC,eAAD;AAAiB,QAAA,OAAO,EAAEtB,OAA1B;AAAA,gCACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAGE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,GAAZ;AAAgB,UAAA,KAAK,MAArB;AAAsB,UAAA,SAAS,EAAEI;AAAjC;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,KAAK,MAA1B;AAA2B,UAAA,SAAS,EAAEH;AAAtC;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,SAAZ;AAAsB,UAAA,KAAK,MAA3B;AAA4B,UAAA,SAAS,EAAEC;AAAvC;AAAA;AAAA;AAAA;AAAA,gBALF,eAME,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,KAAK,MAA1B;AAA2B,UAAA,SAAS,EAAEG;AAAtC;AAAA;AAAA;AAAA;AAAA,gBANF,eAOE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,YAAZ;AAAyB,UAAA,KAAK,MAA9B;AAA+B,UAAA,SAAS,EAAEA;AAA1C;AAAA;AAAA;AAAA;AAAA,gBAPF,eAQE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,WAAZ;AAAwB,UAAA,KAAK,MAA7B;AAA8B,UAAA,SAAS,EAAEF;AAAzC;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAaE,QAAC,MAAD;AAAA,6BACE,QAAC,MAAD;AACE,QAAA,QAAQ,MADV;AAEE,QAAA,QAAQ,EAAE,MAAM;AACdH,UAAAA,OAAO,CAACuB,IAAR,CAAa,QAAb;AACD,SAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD;;GAtCQR,G;UACUN,W;;;KADVM,G;AAwCT,eAAeA,GAAf","sourcesContent":["import \"./App.css\";\nimport React from \"react\";\n\nimport { ConnectedRouter } from \"connected-react-router\";\nimport { history } from \"../redux/configureStore\";\n\nimport { Login, Signup, PostDetail, PostList, PostWrite } from \"../pages\";\n\nimport { Header } from \"../components\";\nimport { Grid, Button } from \"../elements\";\n\nimport { useDispatch } from \"react-redux\";\nimport { actionCreators as userActions } from \"../redux/modules/user\";\n\nimport { apiKey } from \"./firebase\";\nimport { Route } from \"react-router-dom\";\n\nimport Permit from \"./Permit\";\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  const _session_key = `firebase:authUser:${apiKey}:[DEFAULT]`;\n  const is_session = sessionStorage.getItem(_session_key) ? true : false;\n\n  React.useEffect(() => {\n    if (is_session) {\n      dispatch(userActions.loginCheckFB());\n    }\n  }, []);\n\n  return (\n    <Grid >\n      <Grid>\n        <ConnectedRouter history={history}>\n          <Header></Header>\n          {/* 아직 목록 페이지가 없으니, 루트 경로(/)는 Login을 엮어줄게요! */}\n          <Route path=\"/\" exact component={PostList} />\n          <Route path=\"/login\" exact component={Login} />\n          <Route path=\"/signup\" exact component={Signup} />\n          <Route path=\"/write\" exact component={PostWrite} />\n          <Route path=\"/write/:id\" exact component={PostWrite} />\n          <Route path=\"/post/:id\" exact component={PostDetail} />\n        </ConnectedRouter>\n      </Grid>\n      <Permit>\n        <Button\n          is_float\n          _onClick={() => {\n            history.push(\"/write\");\n          }}\n        >\n          +\n        </Button>\n      </Permit>\n    </Grid>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}