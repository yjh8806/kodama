{"ast":null,"code":"import React from\"react\";import{Grid,Text,Button,Image}from\"../elements\";import ExitToAppIcon from\"@material-ui/icons/ExitToApp\";import HomeIcon from\"@material-ui/icons/Home\";import AssignmentIndIcon from'@material-ui/icons/AssignmentInd';import VpnKeyIcon from'@material-ui/icons/VpnKey';import kodama from'../shared/kodama_icon.jpeg';import main_img from\"../shared/kodama_main.jpeg\";import{useSelector,useDispatch}from\"react-redux\";import{actionCreators as userActions}from\"../redux/modules/user\";import{history}from\"../redux/configureStore\";import{apiKey}from\"../shared/firebase\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Header=function Header(props){var dispatch=useDispatch();//   리덕스에서 로그인 중인지 상태값 가져오기\nvar is_login=useSelector(function(state){return state.user.is_login;});//   세션에 기록된 로그인 정보 가져오기\n// 어떻게 생겼는 지는 파이어베이스에서 결정해요! (우리가 결정할 수 있는 건 저장 위치뿐..!)\nvar _session_key=\"firebase:authUser:\".concat(apiKey,\":[DEFAULT]\");//   세션이(로그인 정보겠죠!) 있나없나 확인해요!\nvar is_session=sessionStorage.getItem(_session_key)?true:false;//  아래 주석을 풀고 세션이 있나 없나 확인해볼까요? :)\n//   console.log(is_session);\n// 리덕스에서 is_login이 true로 저장되어 있고, 세션도 있으면 로그인 중인 것으로 판단해요!\n// 로그인 한 뒤 헤더를 보여줄거예요.\nif(is_login&&is_session){return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(Grid,{padding:\"0px\",children:/*#__PURE__*/_jsxs(Grid,{padding:\"16px 0px\",is_flex_main:true,children:[/*#__PURE__*/_jsx(Image,{shape:\"main_circle\",src:main_img}),/*#__PURE__*/_jsx(Text,{main:true,size:\"1.8em\",margin:\"0em 0.5em 0em 0.2em\",bold:true,height:\"13vh\",children:\"\\uD835\\uDD42\\uD835\\uDD46\\uD835\\uDD3B\\uD835\\uDD38\\uD835\\uDD44\\uD835\\uDD38 \\uD835\\uDD44\\uD835\\uDD38\\uD835\\uDD3E\\uD835\\uDD38\\u2124\\uD835\\uDD40\\u2115\\uD835\\uDD3C\"})]})}),/*#__PURE__*/_jsxs(Grid,{is_header:true,is_flex:true,width:\"100%\",maxwidth:\"33.750em\",margin:\"0px auto\",children:[/*#__PURE__*/_jsx(Button,{padding:\"5px 30px\",_onClick:function _onClick(){history.push(\"/\");},children:/*#__PURE__*/_jsx(HomeIcon,{})}),/*#__PURE__*/_jsx(Button,{padding:\"5px 30px\",_onClick:function _onClick(){window.alert(\"로그아웃 완료!\");dispatch(userActions.logoutFB());},children:/*#__PURE__*/_jsx(ExitToAppIcon,{})})]})]});}//   로그인 중이 아니라면 로그인 전 헤더를 보여줍니다.\nreturn/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(Grid,{padding:\"0px\",children:/*#__PURE__*/_jsxs(Grid,{padding:\"16px 0px\",is_flex_main:true,children:[/*#__PURE__*/_jsx(Image,{is_flex:true,shape:\"main_circle\",src:main_img}),/*#__PURE__*/_jsx(Text,{main:true,size:\"1.8em\",margin:\"0em 0.5em 0em 0.2em\",bold:true,height:\"13vh\",children:\"\\uD835\\uDD42\\uD835\\uDD46\\uD835\\uDD3B\\uD835\\uDD38\\uD835\\uDD44\\uD835\\uDD38 \\uD835\\uDD44\\uD835\\uDD38\\uD835\\uDD3E\\uD835\\uDD38\\u2124\\uD835\\uDD40\\u2115\\uD835\\uDD3C\"})]})}),/*#__PURE__*/_jsxs(Grid,{is_header:true,is_flex:true,width:\"100%\",maxwidth:\"33.750em\",minwidth:\"24em\",margin:\"0px auto\",children:[/*#__PURE__*/_jsx(Button,{padding:\"5px 30px\",_onClick:function _onClick(){history.push(\"/\");},children:/*#__PURE__*/_jsx(HomeIcon,{})}),/*#__PURE__*/_jsx(Button,{padding:\"5px 30px\",_onClick:function _onClick(){history.push(\"/login\");},children:/*#__PURE__*/_jsx(VpnKeyIcon,{})}),/*#__PURE__*/_jsx(Button,{padding:\"5px 30px\",_onClick:function _onClick(){history.push(\"/signup\");},children:/*#__PURE__*/_jsx(AssignmentIndIcon,{})})]})]});};Header.defaultProps={};export default Header;","map":{"version":3,"sources":["/Users/frankie/sparta/hanghae_react/magazine_test/src/components/Header.js"],"names":["React","Grid","Text","Button","Image","ExitToAppIcon","HomeIcon","AssignmentIndIcon","VpnKeyIcon","kodama","main_img","useSelector","useDispatch","actionCreators","userActions","history","apiKey","Header","props","dispatch","is_login","state","user","_session_key","is_session","sessionStorage","getItem","push","window","alert","logoutFB","defaultProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Grid, Text, Button, Image } from \"../elements\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\nimport kodama from '../shared/kodama_icon.jpeg';\nimport main_img from \"../shared/kodama_main.jpeg\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { actionCreators as userActions } from \"../redux/modules/user\";\n\nimport { history } from \"../redux/configureStore\";\nimport { apiKey } from \"../shared/firebase\";\n\nconst Header = (props) => {\n  const dispatch = useDispatch();\n\n  //   리덕스에서 로그인 중인지 상태값 가져오기\n  const is_login = useSelector((state) => state.user.is_login);\n\n  //   세션에 기록된 로그인 정보 가져오기\n  // 어떻게 생겼는 지는 파이어베이스에서 결정해요! (우리가 결정할 수 있는 건 저장 위치뿐..!)\n  const _session_key = `firebase:authUser:${apiKey}:[DEFAULT]`;\n\n  //   세션이(로그인 정보겠죠!) 있나없나 확인해요!\n  const is_session = sessionStorage.getItem(_session_key) ? true : false;\n  //  아래 주석을 풀고 세션이 있나 없나 확인해볼까요? :)\n  //   console.log(is_session);\n\n  // 리덕스에서 is_login이 true로 저장되어 있고, 세션도 있으면 로그인 중인 것으로 판단해요!\n  // 로그인 한 뒤 헤더를 보여줄거예요.\n  if (is_login && is_session) {\n    return (\n      <React.Fragment>\n        <Grid padding=\"0px\">\n          <Grid padding=\"16px 0px\" is_flex_main>\n            <Image shape=\"main_circle\" src={main_img}/>\n            <Text\n              main\n              size=\"1.8em\"\n              margin=\"0em 0.5em 0em 0.2em\"\n              bold\n              height=\"13vh\"\n            >\n              𝕂𝕆𝔻𝔸𝕄𝔸 𝕄𝔸𝔾𝔸ℤ𝕀ℕ𝔼\n            </Text>\n          </Grid>\n        </Grid>\n        <Grid\n          is_header\n          is_flex\n          width=\"100%\"\n          maxwidth=\"33.750em\"\n          margin=\"0px auto\"\n        >\n          <Button\n            padding=\"5px 30px\"\n            _onClick={() => {\n              history.push(\"/\");\n            }}\n          >\n            <HomeIcon />\n          </Button>\n          <Button\n            padding=\"5px 30px\"\n            _onClick={() => {\n              window.alert(\"로그아웃 완료!\");\n              dispatch(userActions.logoutFB());\n            }}\n          >\n            <ExitToAppIcon />\n          </Button>\n        </Grid>\n      </React.Fragment>\n    );\n  }\n\n  //   로그인 중이 아니라면 로그인 전 헤더를 보여줍니다.\n  return (\n    <React.Fragment>\n      <Grid padding=\"0px\">\n        <Grid padding=\"16px 0px\" is_flex_main>\n          <Image is_flex shape=\"main_circle\" src={main_img}/>\n          <Text\n            main\n            size=\"1.8em\"\n            margin=\"0em 0.5em 0em 0.2em\"\n            bold\n            height=\"13vh\"\n          >\n            𝕂𝕆𝔻𝔸𝕄𝔸 𝕄𝔸𝔾𝔸ℤ𝕀ℕ𝔼\n          </Text>\n        </Grid>\n      </Grid>\n      <Grid\n        is_header\n        is_flex\n        width=\"100%\"\n        maxwidth=\"33.750em\"\n        minwidth=\"24em\"\n        margin=\"0px auto\"\n      >\n        <Button\n          padding=\"5px 30px\"\n          _onClick={() => {\n            history.push(\"/\");\n          }}\n        >\n          <HomeIcon />\n        </Button>\n        <Button\n          padding=\"5px 30px\"\n          _onClick={() => {\n            history.push(\"/login\");\n          }}\n        >\n          <VpnKeyIcon />\n        </Button>\n        <Button\n          padding=\"5px 30px\"\n          _onClick={() => {\n            history.push(\"/signup\")\n          }}\n        >\n          <AssignmentIndIcon />\n        </Button>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nHeader.defaultProps = {};\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}