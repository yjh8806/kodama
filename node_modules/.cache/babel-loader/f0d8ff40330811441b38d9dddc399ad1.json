{"ast":null,"code":"import _slicedToArray from\"/Users/frankie/sparta/hanghae_react/magazine_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from\"react\";import{Grid,Text,Input,Button}from\"../elements\";import{useDispatch}from\"react-redux\";import{actionCreators as userActions}from\"../redux/modules/user\";// 이메일 형식 체크하는 함수를 가져옵니다.\nimport{emailCheck}from\"../shared/common\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Signup=function Signup(props){var dispatch=useDispatch();var _React$useState=React.useState(\"\"),_React$useState2=_slicedToArray(_React$useState,2),id=_React$useState2[0],setId=_React$useState2[1];var _React$useState3=React.useState(\"\"),_React$useState4=_slicedToArray(_React$useState3,2),pwd=_React$useState4[0],setPwd=_React$useState4[1];var _React$useState5=React.useState(\"\"),_React$useState6=_slicedToArray(_React$useState5,2),pwd_check=_React$useState6[0],setPwdCheck=_React$useState6[1];var _React$useState7=React.useState(\"\"),_React$useState8=_slicedToArray(_React$useState7,2),user_name=_React$useState8[0],setUserName=_React$useState8[1];var signup=function signup(){// 아이디와 패스워드, 유저 닉네임이 있는 지 확인!\n// 미들웨어에서 처리해도 괜찮지만, 딱봐도 어림없는 값(공백 등등)이 굳이 미들웨어까지 갈 필요 없으니 여기에서 막아줄거예요.\nif(id===\"\"||pwd===\"\"||pwd_check===\"\"||user_name===\"\"){window.alert(\"아이디, 패스워드, 닉네임을 모두 입력해주세요!\");return;}// id가 이메일 형식이 맞나 확인!\nif(!emailCheck(id)){window.alert(\"이메일 형식이 맞지 않습니다!\");return;}// 비밀번호와 비밀번호 확인 부분이 일치하나 확인!\nif(pwd!==pwd_check){window.alert(\"패스워드와 패스워드 확인이 일치하지 않습니다!\");return;}// 회원가입 함수를 디스패치합니다.(비밀번호 확인은 비밀번호와 똑같으니 굳이 넘기지 않았어요!)\ndispatch(userActions.signupFB(id,pwd,user_name));};return/*#__PURE__*/_jsx(React.Fragment,{children:/*#__PURE__*/_jsxs(Grid,{padding:\"16px\",height:\"93.1vh\",children:[/*#__PURE__*/_jsx(Text,{size:\"32px\",bold:true,children:\"\\uD68C\\uC6D0\\uAC00\\uC785\"}),/*#__PURE__*/_jsx(Grid,{padding:\"16px 0px\",children:/*#__PURE__*/_jsx(Input,{label:\"\\uC544\\uC774\\uB514\",placeholder:\"\\uC544\\uC774\\uB514\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",_onChange:function _onChange(e){setId(e.target.value);}})}),/*#__PURE__*/_jsx(Grid,{padding:\"16px 0px\",children:/*#__PURE__*/_jsx(Input,{label:\"\\uB2C9\\uB124\\uC784\",placeholder:\"\\uB2C9\\uB124\\uC784\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",_onChange:function _onChange(e){setUserName(e.target.value);}})}),/*#__PURE__*/_jsx(Grid,{padding:\"16px 0px\",children:/*#__PURE__*/_jsx(Input,{label:\"\\uBE44\\uBC00\\uBC88\\uD638\",type:\"password\",placeholder:\"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",_onChange:function _onChange(e){setPwd(e.target.value);}})}),/*#__PURE__*/_jsx(Grid,{padding:\"16px 0px\",children:/*#__PURE__*/_jsx(Input,{label:\"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\",type:\"password\",placeholder:\"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uB2E4\\uC2DC \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",_onChange:function _onChange(e){setPwdCheck(e.target.value);}})}),/*#__PURE__*/_jsx(Button,{_onClick:signup,children:\"\\uD68C\\uC6D0\\uAC00\\uC785\\uD558\\uAE30\"})]})});};Signup.defaultProps={};export default Signup;","map":{"version":3,"sources":["/Users/frankie/sparta/hanghae_react/magazine_test/src/pages/Signup.js"],"names":["React","Grid","Text","Input","Button","useDispatch","actionCreators","userActions","emailCheck","Signup","props","dispatch","useState","id","setId","pwd","setPwd","pwd_check","setPwdCheck","user_name","setUserName","signup","window","alert","signupFB","e","target","value","defaultProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Grid, Text, Input, Button } from \"../elements\";\n\nimport { useDispatch } from \"react-redux\";\nimport { actionCreators as userActions } from \"../redux/modules/user\";\n\n// 이메일 형식 체크하는 함수를 가져옵니다.\nimport { emailCheck } from \"../shared/common\";\n\nconst Signup = (props) => {\n  const dispatch = useDispatch();\n\n  const [id, setId] = React.useState(\"\");\n  const [pwd, setPwd] = React.useState(\"\");\n  const [pwd_check, setPwdCheck] = React.useState(\"\");\n  const [user_name, setUserName] = React.useState(\"\");\n\n  const signup = () => {\n    // 아이디와 패스워드, 유저 닉네임이 있는 지 확인!\n    // 미들웨어에서 처리해도 괜찮지만, 딱봐도 어림없는 값(공백 등등)이 굳이 미들웨어까지 갈 필요 없으니 여기에서 막아줄거예요.\n    if (id === \"\" || pwd === \"\" || pwd_check === \"\" || user_name === \"\") {\n      window.alert(\"아이디, 패스워드, 닉네임을 모두 입력해주세요!\");\n      return;\n    }\n\n    // id가 이메일 형식이 맞나 확인!\n    if (!emailCheck(id)) {\n      window.alert(\"이메일 형식이 맞지 않습니다!\");\n      return;\n    }\n\n    // 비밀번호와 비밀번호 확인 부분이 일치하나 확인!\n    if (pwd !== pwd_check) {\n      window.alert(\"패스워드와 패스워드 확인이 일치하지 않습니다!\");\n      return;\n    }\n\n    // 회원가입 함수를 디스패치합니다.(비밀번호 확인은 비밀번호와 똑같으니 굳이 넘기지 않았어요!)\n    dispatch(userActions.signupFB(id, pwd, user_name));\n  };\n  return (\n    <React.Fragment>\n      <Grid padding=\"16px\" height=\"93.1vh\">\n        <Text size=\"32px\" bold>\n          회원가입\n        </Text>\n\n        <Grid padding=\"16px 0px\">\n          <Input\n            label=\"아이디\"\n            placeholder=\"아이디를 입력해주세요.\"\n            _onChange={(e) => {\n              setId(e.target.value);\n            }}\n          />\n        </Grid>\n\n        <Grid padding=\"16px 0px\">\n          <Input\n            label=\"닉네임\"\n            placeholder=\"닉네임을 입력해주세요.\"\n            _onChange={(e) => {\n              setUserName(e.target.value);\n            }}\n          />\n        </Grid>\n\n        <Grid padding=\"16px 0px\">\n          <Input\n            label=\"비밀번호\"\n            type=\"password\"\n            placeholder=\"비밀번호를 입력해주세요.\"\n            _onChange={(e) => {\n              setPwd(e.target.value);\n            }}\n          />\n        </Grid>\n\n        <Grid padding=\"16px 0px\">\n          <Input\n            label=\"비밀번호 확인\"\n            type=\"password\"\n            placeholder=\"비밀번호를 다시 입력해주세요.\"\n            _onChange={(e) => {\n              setPwdCheck(e.target.value);\n            }}\n          />\n        </Grid>\n\n        <Button _onClick={signup}>회원가입하기</Button>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nSignup.defaultProps = {};\n\nexport default Signup;\n"]},"metadata":{},"sourceType":"module"}