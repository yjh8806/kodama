{"ast":null,"code":"import _slicedToArray from\"/Users/frankie/sparta/hanghae_react/magazine_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from\"react\";import{Grid,Text,Button,Image,Input}from\"../elements\";import Upload from\"../shared/Upload\";import RadioBtn from\"../elements/RadioBtn\";import{useSelector,useDispatch}from\"react-redux\";import{actionCreators as postActions}from\"../redux/modules/post\";import{actionCreators as imageActions}from\"../redux/modules/image\";//   게시글 수정과 작성을 이 컴포넌트 하나로 할거예요.\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var PostWrite=function PostWrite(props){var dispatch=useDispatch();var is_login=useSelector(function(state){return state.user.is_login;});var preview=useSelector(function(state){return state.image.preview;});var post_list=useSelector(function(state){return state.post.list;});//   주소창을 보고 id값을 가져와요.\nvar post_id=props.match.params.id;//   post id를 가지고 수정모드인 지, 작성 모드인지 구분해줍니다.\nvar is_edit=post_id?true:false;var history=props.history;//   수정모드라면? 게시글 정보를 가져와요!\n// 미리 어느정도 정보를 넣어주기 위해서 가져오는 거예요 :)\nvar _post=is_edit?post_list.find(function(p){return p.id===post_id;}):null;var _React$useState=React.useState(_post?_post.contents:\"\"),_React$useState2=_slicedToArray(_React$useState,2),contents=_React$useState2[0],setContents=_React$useState2[1];var _layout_type=post_id?_post.layout_type:\"\";var _React$useState3=React.useState(_layout_type?_layout_type:\"\"),_React$useState4=_slicedToArray(_React$useState3,2),layout_type=_React$useState4[0],setLayoutType=_React$useState4[1];var setDisabled=!layout_type||contents===\"\"?true:false;React.useEffect(function(){// 수정모드인데, 게시글 정보가 없으면? 경고를 띄우고 뒤로 가게 합니다.\nif(is_edit&&!_post){window.alert(\"포스트 정보가 없어요!\");history.goBack();return;}else{setTimeout(function(){window.alert(\"게시글 작성 시 레이아웃 선택 및 내용 작성은 필수항목입니다!\");},200);}// 수정모드라면?\n// 이미지 미리보기도 하나 넣어줘야죠!\nif(is_edit){dispatch(imageActions.setPreview(_post.image_url));console.log(_post);}},[]);//   내용을 바꿔주는 함수\n// useState를 이용해요!\nvar changeContents=function changeContents(e){setContents(e.target.value);};// 레이아웃 타입을 정해주는 함수\n// useState를 이용해요!\nvar changeLayoutType=function changeLayoutType(event){setLayoutType(event.target.value);};//   게시글을 추가하는 함수\nvar addPost=function addPost(){dispatch(postActions.addPostFB(contents,layout_type));};//   게시글을 수정하는 함수\nvar editPost=function editPost(){dispatch(postActions.editPostFB(post_id,{contents:contents}));};//   로그인 하지 않았다면? 로그인 사용자만 작성할 수 있다는 화면을 보여줘요!\nif(!is_login){return/*#__PURE__*/_jsxs(Grid,{margin:\"100px 0px\",padding:\"16px\",center:true,children:[/*#__PURE__*/_jsx(Text,{size:\"32px\",bold:true,children:\"\\uC557! \\uC7A0\\uAE50!\"}),/*#__PURE__*/_jsx(Text,{size:\"16px\",children:\"\\uB85C\\uADF8\\uC778 \\uD6C4\\uC5D0\\uB9CC \\uAE00\\uC744 \\uC4F8 \\uC218 \\uC788\\uC5B4\\uC694!\"}),/*#__PURE__*/_jsx(Button,{_onClick:function _onClick(){history.replace(\"/\");},children:\"\\uB85C\\uADF8\\uC778 \\uD558\\uB7EC\\uAC00\\uAE30\"})]});}return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsxs(Grid,{padding:\"16px\",children:[/*#__PURE__*/_jsx(Text,{margin:\"0px\",size:\"36px\",bold:true,children:is_edit?\"게시글 수정\":\"게시글 작성\"}),/*#__PURE__*/_jsx(Upload,{})]}),/*#__PURE__*/_jsxs(Grid,{children:[/*#__PURE__*/_jsx(Grid,{padding:\"16px\",children:/*#__PURE__*/_jsxs(Text,{margin:\"0px\",size:\"24px\",bold:true,children:[\"\\u30FB\\xA0\\uBBF8\\uB9AC\\uBCF4\\uAE30\",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"span\",{style:{fontSize:\"0.7em\"},children:\"(\\uB808\\uC774\\uC544\\uC6C3 \\uC124\\uC815)\"})]})}),/*#__PURE__*/_jsxs(Grid,{is_flex:true,children:[/*#__PURE__*/_jsx(RadioBtn,{type:\"radio\",id:\"radio1\",value:\"a\",checked:layout_type===\"a\",_onChange:changeLayoutType,text:\"\\uD14D\\uC2A4\\uD2B8(\\uC0C1)) / \\uC774\\uBBF8\\uC9C0(\\uD558)\"}),/*#__PURE__*/_jsx(RadioBtn,{type:\"radio\",id:\"radio2\",value:\"b\",checked:layout_type===\"b\",_onChange:changeLayoutType,text:\"\\uD14D\\uC2A4\\uD2B8(\\uC88C) / \\uC774\\uBBF8\\uC9C0(\\uC6B0)\"}),/*#__PURE__*/_jsx(RadioBtn,{type:\"radio\",id:\"radio3\",value:\"c\",checked:layout_type===\"c\",_onChange:changeLayoutType,text:\"\\uC774\\uBBF8\\uC9C0(\\uC88C) / \\uD14D\\uC2A4\\uD2B8(\\uC6B0)\"})]}),layout_type===\"\"?/*#__PURE__*/_jsx(Image,{shape:\"rectangle\",src:preview?preview:\"http://via.placeholder.com/400x300\"}):\"\",layout_type===\"a\"?/*#__PURE__*/_jsx(Image,{shape:\"AboveTxtBeneathImg\",width:\"21em\",height:\"20em\",contents:contents,src:preview?preview:\"http://via.placeholder.com/400x300\"}):\"\",layout_type===\"b\"?/*#__PURE__*/_jsx(Image,{is_flex:true,shape:\"leftTxtRightImg\",contents:contents,src:preview?preview:\"http://via.placeholder.com/400x300\"}):\"\",layout_type===\"c\"?/*#__PURE__*/_jsx(Image,{is_flex:true,shape:\"leftImgRightTxt\",contents:contents,src:preview?preview:\"http://via.placeholder.com/400x300\"}):\"\"]}),/*#__PURE__*/_jsx(Grid,{padding:\"16px\",children:/*#__PURE__*/_jsx(Input,{value:contents,_onChange:changeContents,label:\"\\uAC8C\\uC2DC\\uAE00 \\uB0B4\\uC6A9\",placeholder:\"\\uAC8C\\uC2DC\\uAE00 \\uC791\\uC131\",multiLine:true})}),/*#__PURE__*/_jsx(Grid,{padding:\"16px\",children:is_edit?/*#__PURE__*/_jsx(Button,{disabled:setDisabled,_onClick:editPost,children:\"\\uAC8C\\uC2DC\\uAE00 \\uC218\\uC815\"}):/*#__PURE__*/_jsx(Button,{disabled:setDisabled,_onClick:addPost,children:\"\\uAC8C\\uC2DC\\uAE00 \\uC791\\uC131\"})})]});};export default PostWrite;","map":{"version":3,"sources":["/Users/frankie/sparta/hanghae_react/magazine_test/src/pages/PostWrite.js"],"names":["React","Grid","Text","Button","Image","Input","Upload","RadioBtn","useSelector","useDispatch","actionCreators","postActions","imageActions","PostWrite","props","dispatch","is_login","state","user","preview","image","post_list","post","list","post_id","match","params","id","is_edit","history","_post","find","p","useState","contents","setContents","_layout_type","layout_type","setLayoutType","setDisabled","useEffect","window","alert","goBack","setTimeout","setPreview","image_url","console","log","changeContents","e","target","value","changeLayoutType","event","addPost","addPostFB","editPost","editPostFB","replace","fontSize"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Grid, Text, Button, Image, Input } from \"../elements\";\nimport Upload from \"../shared/Upload\";\nimport RadioBtn from \"../elements/RadioBtn\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { actionCreators as postActions } from \"../redux/modules/post\";\nimport { actionCreators as imageActions } from \"../redux/modules/image\";\n\n//   게시글 수정과 작성을 이 컴포넌트 하나로 할거예요.\nconst PostWrite = (props) => {\n  const dispatch = useDispatch();\n  const is_login = useSelector((state) => state.user.is_login);\n  const preview = useSelector((state) => state.image.preview);\n  const post_list = useSelector((state) => state.post.list);\n\n  //   주소창을 보고 id값을 가져와요.\n  const post_id = props.match.params.id;\n  //   post id를 가지고 수정모드인 지, 작성 모드인지 구분해줍니다.\n  const is_edit = post_id ? true : false;\n\n  const { history } = props;\n\n  //   수정모드라면? 게시글 정보를 가져와요!\n  // 미리 어느정도 정보를 넣어주기 위해서 가져오는 거예요 :)\n  let _post = is_edit ? post_list.find((p) => p.id === post_id) : null;\n\n  const [contents, setContents] = React.useState(_post ? _post.contents : \"\");\n\n  const _layout_type = post_id ? _post.layout_type : \"\";\n  const [layout_type, setLayoutType] = React.useState(\n    _layout_type ? _layout_type : \"\"\n  );\n  const setDisabled = !layout_type || contents === \"\" ? true : false;\n\n  React.useEffect(() => {\n    // 수정모드인데, 게시글 정보가 없으면? 경고를 띄우고 뒤로 가게 합니다.\n    if (is_edit && !_post) {\n      window.alert(\"포스트 정보가 없어요!\");\n      history.goBack();\n      return;\n    } else {\n      setTimeout(() => {\n        window.alert(\n          \"게시글 작성 시 레이아웃 선택 및 내용 작성은 필수항목입니다!\"\n        );\n      }, 200);\n    }\n\n    // 수정모드라면?\n    // 이미지 미리보기도 하나 넣어줘야죠!\n    if (is_edit) {\n      dispatch(imageActions.setPreview(_post.image_url));\n      console.log(_post);\n    }\n  }, []);\n\n  //   내용을 바꿔주는 함수\n  // useState를 이용해요!\n  const changeContents = (e) => {\n    setContents(e.target.value);\n  };\n\n  // 레이아웃 타입을 정해주는 함수\n  // useState를 이용해요!\n  const changeLayoutType = (event) => {\n    setLayoutType(event.target.value);\n  };\n\n  //   게시글을 추가하는 함수\n  const addPost = () => {\n    dispatch(postActions.addPostFB(contents, layout_type));\n  };\n\n  //   게시글을 수정하는 함수\n  const editPost = () => {\n    dispatch(postActions.editPostFB(post_id, { contents: contents }));\n  };\n\n  //   로그인 하지 않았다면? 로그인 사용자만 작성할 수 있다는 화면을 보여줘요!\n  if (!is_login) {\n    return (\n      <Grid margin=\"100px 0px\" padding=\"16px\" center>\n        <Text size=\"32px\" bold>\n          앗! 잠깐!\n        </Text>\n        <Text size=\"16px\">로그인 후에만 글을 쓸 수 있어요!</Text>\n        <Button\n          _onClick={() => {\n            history.replace(\"/\");\n          }}\n        >\n          로그인 하러가기\n        </Button>\n      </Grid>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <Grid padding=\"16px\">\n        <Text margin=\"0px\" size=\"36px\" bold>\n          {is_edit ? \"게시글 수정\" : \"게시글 작성\"}\n        </Text>\n        <Upload />\n      </Grid>\n\n      <Grid>\n        <Grid padding=\"16px\">\n          <Text margin=\"0px\" size=\"24px\" bold>\n            ・&nbsp;미리보기\n            <br />\n            <span style={{ fontSize: \"0.7em\" }}>(레이아웃 설정)</span>\n          </Text>\n        </Grid>\n\n        <Grid is_flex>\n          <RadioBtn\n            type=\"radio\"\n            id=\"radio1\"\n            value=\"a\"\n            checked={layout_type === \"a\"}\n            _onChange={changeLayoutType}\n            text=\"텍스트(상)) / 이미지(하)\"\n          />\n\n          <RadioBtn\n            type=\"radio\"\n            id=\"radio2\"\n            value=\"b\"\n            checked={layout_type === \"b\"}\n            _onChange={changeLayoutType}\n            text=\"텍스트(좌) / 이미지(우)\"\n          />\n\n          <RadioBtn\n            type=\"radio\"\n            id=\"radio3\"\n            value=\"c\"\n            checked={layout_type === \"c\"}\n            _onChange={changeLayoutType}\n            text=\"이미지(좌) / 텍스트(우)\"\n          />\n        </Grid>\n\n        {layout_type === \"\" ? (\n          <Image\n            shape=\"rectangle\"\n            src={preview ? preview : \"http://via.placeholder.com/400x300\"}\n          />\n        ) : (\n          \"\"\n        )}\n\n        {layout_type === \"a\" ? (\n          <Image\n            shape=\"AboveTxtBeneathImg\"\n            width=\"21em\"\n            height=\"20em\"\n            contents={contents}\n            src={preview ? preview : \"http://via.placeholder.com/400x300\"}\n          />\n        ) : (\n          \"\"\n        )}\n\n        {layout_type === \"b\" ? (\n          <Image\n            is_flex\n            shape=\"leftTxtRightImg\"\n            contents={contents}\n            src={preview ? preview : \"http://via.placeholder.com/400x300\"}\n          />\n        ) : (\n          \"\"\n        )}\n\n        {layout_type === \"c\" ? (\n          <Image\n            is_flex\n            shape=\"leftImgRightTxt\"\n            contents={contents}\n            src={preview ? preview : \"http://via.placeholder.com/400x300\"}\n          />\n        ) : (\n          \"\"\n        )}\n      </Grid>\n\n      <Grid padding=\"16px\">\n        <Input\n          value={contents}\n          _onChange={changeContents}\n          label=\"게시글 내용\"\n          placeholder=\"게시글 작성\"\n          multiLine\n        />\n      </Grid>\n\n      <Grid padding=\"16px\">\n        {is_edit ? (\n          <Button disabled={setDisabled} _onClick={editPost}>\n            게시글 수정\n          </Button>\n        ) : (\n          <Button disabled={setDisabled} _onClick={addPost}>\n            게시글 작성\n          </Button>\n        )}\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default PostWrite;\n"]},"metadata":{},"sourceType":"module"}