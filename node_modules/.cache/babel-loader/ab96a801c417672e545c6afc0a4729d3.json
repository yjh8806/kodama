{"ast":null,"code":"var _jsxFileName = \"/Users/frankie/sparta/hanghae_react/magazine_test/src/pages/PostDetail.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Post from \"../components/Post\";\nimport { Grid } from \"../elements\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { actionCreators as postActions } from \"../redux/modules/post\"; // 게시글 상세 페이지\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostDetail = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const id = props.match.params.id;\n  const user_info = useSelector(state => state.user.user); //   리덕스에서 게시글 목록을 가져옵니다.\n\n  const post_list = useSelector(store => store.post.list); //   게시글 id로 현재 게시글이 게시글 목록에서 몇 번째에 있나 인덱스를 찾아요!\n\n  const post_idx = post_list.findIndex(p => p.id === id); //   인덱스로 게시글 상세정보를 가져옵니다.\n\n  const post = post_list[post_idx];\n  React.useEffect(() => {\n    // 만약 게시글이 없으면?\n    if (post) {\n      return;\n    } // 파이어스토어에서 이 게시글 1개 정보만 가져와요!\n\n\n    dispatch(postActions.getOnePostFB(id));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    height: \"86vh\",\n    children: post && /*#__PURE__*/_jsxDEV(Post, { ...post,\n      is_me: post.user_info.user_id === (user_info === null || user_info === void 0 ? void 0 : user_info.uid)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostDetail, \"lB3dOQtTn+q0oQRlxg50JtbqMVk=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = PostDetail;\nexport default PostDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostDetail\");","map":{"version":3,"sources":["/Users/frankie/sparta/hanghae_react/magazine_test/src/pages/PostDetail.js"],"names":["React","Post","Grid","useDispatch","useSelector","actionCreators","postActions","PostDetail","props","dispatch","id","match","params","user_info","state","user","post_list","store","post","list","post_idx","findIndex","p","useEffect","getOnePostFB","user_id","uid"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,IAAT,QAAqB,aAArB;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,cAAc,IAAIC,WAA3B,QAA8C,uBAA9C,C,CAEA;;;;AACA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC5B,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMO,EAAE,GAAGF,KAAK,CAACG,KAAN,CAAYC,MAAZ,CAAmBF,EAA9B;AAEA,QAAMG,SAAS,GAAGT,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWA,IAAvB,CAA7B,CAJ4B,CAM5B;;AACA,QAAMC,SAAS,GAAGZ,WAAW,CAAEa,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWC,IAAvB,CAA7B,CAP4B,CAS5B;;AACA,QAAMC,QAAQ,GAAGJ,SAAS,CAACK,SAAV,CAAqBC,CAAD,IAAOA,CAAC,CAACZ,EAAF,KAASA,EAApC,CAAjB,CAV4B,CAY5B;;AACA,QAAMQ,IAAI,GAAGF,SAAS,CAACI,QAAD,CAAtB;AAEApB,EAAAA,KAAK,CAACuB,SAAN,CAAgB,MAAM;AACpB;AACA,QAAIL,IAAJ,EAAU;AACR;AACD,KAJmB,CAMpB;;;AACAT,IAAAA,QAAQ,CAACH,WAAW,CAACkB,YAAZ,CAAyBd,EAAzB,CAAD,CAAR;AACD,GARD,EAQG,EARH;AAUA,sBACE,QAAC,IAAD;AAAM,IAAA,MAAM,EAAC,MAAb;AAAA,cACGQ,IAAI,iBACH,QAAC,IAAD,OAAUA,IAAV;AAAgB,MAAA,KAAK,EAAEA,IAAI,CAACL,SAAL,CAAeY,OAAf,MAA2BZ,SAA3B,aAA2BA,SAA3B,uBAA2BA,SAAS,CAAEa,GAAtC;AAAvB;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAhCD;;GAAMnB,U;UACaJ,W,EAGCC,W,EAGAA,W;;;KAPdG,U;AAkCN,eAAeA,UAAf","sourcesContent":["import React from \"react\";\nimport Post from \"../components/Post\";\nimport { Grid } from \"../elements\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { actionCreators as postActions } from \"../redux/modules/post\";\n\n// 게시글 상세 페이지\nconst PostDetail = (props) => {\n  const dispatch = useDispatch();\n  const id = props.match.params.id;\n\n  const user_info = useSelector((state) => state.user.user);\n\n  //   리덕스에서 게시글 목록을 가져옵니다.\n  const post_list = useSelector((store) => store.post.list);\n\n  //   게시글 id로 현재 게시글이 게시글 목록에서 몇 번째에 있나 인덱스를 찾아요!\n  const post_idx = post_list.findIndex((p) => p.id === id);\n\n  //   인덱스로 게시글 상세정보를 가져옵니다.\n  const post = post_list[post_idx];\n\n  React.useEffect(() => {\n    // 만약 게시글이 없으면?\n    if (post) {\n      return;\n    }\n\n    // 파이어스토어에서 이 게시글 1개 정보만 가져와요!\n    dispatch(postActions.getOnePostFB(id));\n  }, []);\n\n  return (\n    <Grid height=\"86vh\">\n      {post && (\n        <Post {...post} is_me={post.user_info.user_id === user_info?.uid} />\n      )}\n    </Grid>\n  );\n};\n\nexport default PostDetail;\n"]},"metadata":{},"sourceType":"module"}