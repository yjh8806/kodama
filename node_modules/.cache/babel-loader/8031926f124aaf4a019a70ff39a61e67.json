{"ast":null,"code":"var _jsxFileName = \"/Users/frankie/sparta/hanghae_react/magazine_test/src/elements/Grid.js\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Grid = props => {\n  const {\n    is_flex,\n    width,\n    margin,\n    padding,\n    bg,\n    children,\n    center,\n    _onClick\n  } = props; //   스타일드 컴포넌트에 보낼 내용만 따로 묶어주면 return에 들어갈 코드가 좀 더 깔끔해집니다!\n\n  const styles = {\n    is_flex: is_flex,\n    width: width,\n    margin: margin,\n    padding: padding,\n    bg: bg,\n    center: center\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(GridBox, { ...styles,\n      onClick: _onClick,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}; // props가 넘어오지 않아도 화면이 잘 그려지도록 기본 값 넣어주기\n\n\n_c = Grid;\nGrid.defaultProps = {\n  chidren: null,\n  is_flex: false,\n  width: \"100%\",\n  padding: false,\n  margin: false,\n  bg: false,\n  center: false,\n  _onClick: () => {}\n};\nconst GridBox = styled.div`\n  width: ${props => props.width};\n  height: 100%;\n  box-sizing: border-box;\n  ${props => props.padding ? `padding: ${props.padding};` : \"\"}\n  ${props => props.margin ? `margin: ${props.margin};` : \"\"}\n  ${props => props.bg ? `background: ${props.bg};` : \"\"}\n  maxwidth\n  ${props => props.bg ? `background: ${props.bg};` : \"\"}  \n  ${props => props.is_flex ? `display: flex; align-items: center; justify-content: space-between; ` : \"\"}\n  ${props => props.center ? `text-align: center;` : \"\"}\n`;\n_c2 = GridBox;\nexport default Grid;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Grid\");\n$RefreshReg$(_c2, \"GridBox\");","map":{"version":3,"sources":["/Users/frankie/sparta/hanghae_react/magazine_test/src/elements/Grid.js"],"names":["React","styled","Grid","props","is_flex","width","margin","padding","bg","children","center","_onClick","styles","defaultProps","chidren","GridBox","div"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AACtB,QAAM;AACJC,IAAAA,OADI;AAEJC,IAAAA,KAFI;AAGJC,IAAAA,MAHI;AAIJC,IAAAA,OAJI;AAKJC,IAAAA,EALI;AAMJC,IAAAA,QANI;AAOJC,IAAAA,MAPI;AAQJC,IAAAA;AARI,MASFR,KATJ,CADsB,CAYtB;;AACA,QAAMS,MAAM,GAAG;AACbR,IAAAA,OAAO,EAAEA,OADI;AAEbC,IAAAA,KAAK,EAAEA,KAFM;AAGbC,IAAAA,MAAM,EAAEA,MAHK;AAIbC,IAAAA,OAAO,EAAEA,OAJI;AAKbC,IAAAA,EAAE,EAAEA,EALS;AAMbE,IAAAA,MAAM,EAAEA;AANK,GAAf;AASA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,2BACE,QAAC,OAAD,OAAaE,MAAb;AAAqB,MAAA,OAAO,EAAED,QAA9B;AAAA,gBACGF;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CA7BD,C,CA+BA;;;KA/BMP,I;AAgCNA,IAAI,CAACW,YAAL,GAAoB;AAClBC,EAAAA,OAAO,EAAE,IADS;AAElBV,EAAAA,OAAO,EAAE,KAFS;AAGlBC,EAAAA,KAAK,EAAE,MAHW;AAIlBE,EAAAA,OAAO,EAAE,KAJS;AAKlBD,EAAAA,MAAM,EAAE,KALU;AAMlBE,EAAAA,EAAE,EAAE,KANc;AAOlBE,EAAAA,MAAM,EAAE,KAPU;AAQlBC,EAAAA,QAAQ,EAAE,MAAM,CAAE;AARA,CAApB;AAWA,MAAMI,OAAO,GAAGd,MAAM,CAACe,GAAI;AAC3B,WAAYb,KAAD,IAAWA,KAAK,CAACE,KAAM;AAClC;AACA;AACA,IAAKF,KAAD,IAAYA,KAAK,CAACI,OAAN,GAAiB,YAAWJ,KAAK,CAACI,OAAQ,GAA1C,GAA+C,EAAI;AACnE,IAAKJ,KAAD,IAAYA,KAAK,CAACG,MAAN,GAAgB,WAAUH,KAAK,CAACG,MAAO,GAAvC,GAA4C,EAAI;AAChE,IAAKH,KAAD,IAAYA,KAAK,CAACK,EAAN,GAAY,eAAcL,KAAK,CAACK,EAAG,GAAnC,GAAwC,EAAI;AAC5D;AACA,IAAKL,KAAD,IAAYA,KAAK,CAACK,EAAN,GAAY,eAAcL,KAAK,CAACK,EAAG,GAAnC,GAAwC,EAAI;AAC5D,IAAKL,KAAD,IACAA,KAAK,CAACC,OAAN,GACK,sEADL,GAEI,EAAG;AACX,IAAKD,KAAD,IAAYA,KAAK,CAACO,MAAN,GAAgB,qBAAhB,GAAuC,EAAI;AAC3D,CAdA;MAAMK,O;AAgBN,eAAeb,IAAf","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Grid = (props) => {\n  const {\n    is_flex,\n    width,\n    margin,\n    padding,\n    bg,\n    children,\n    center,\n    _onClick,\n  } = props;\n\n  //   스타일드 컴포넌트에 보낼 내용만 따로 묶어주면 return에 들어갈 코드가 좀 더 깔끔해집니다!\n  const styles = {\n    is_flex: is_flex,\n    width: width,\n    margin: margin,\n    padding: padding,\n    bg: bg,\n    center: center,\n  };\n\n  return (\n    <React.Fragment>\n      <GridBox {...styles} onClick={_onClick}>\n        {children}\n      </GridBox>\n    </React.Fragment>\n  );\n};\n\n// props가 넘어오지 않아도 화면이 잘 그려지도록 기본 값 넣어주기\nGrid.defaultProps = {\n  chidren: null,\n  is_flex: false,\n  width: \"100%\",\n  padding: false,\n  margin: false,\n  bg: false,\n  center: false,\n  _onClick: () => {},\n};\n\nconst GridBox = styled.div`\n  width: ${(props) => props.width};\n  height: 100%;\n  box-sizing: border-box;\n  ${(props) => (props.padding ? `padding: ${props.padding};` : \"\")}\n  ${(props) => (props.margin ? `margin: ${props.margin};` : \"\")}\n  ${(props) => (props.bg ? `background: ${props.bg};` : \"\")}\n  maxwidth\n  ${(props) => (props.bg ? `background: ${props.bg};` : \"\")}  \n  ${(props) =>\n    props.is_flex\n      ? `display: flex; align-items: center; justify-content: space-between; `\n      : \"\"}\n  ${(props) => (props.center ? `text-align: center;` : \"\")}\n`;\n\nexport default Grid;\n"]},"metadata":{},"sourceType":"module"}