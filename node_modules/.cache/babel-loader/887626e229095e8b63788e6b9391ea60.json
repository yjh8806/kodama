{"ast":null,"code":"var _jsxFileName = \"/Users/frankie/sparta/hanghae_react/magazine_test/src/shared/Permit.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { apiKey } from \"./firebase\"; // 로그인을 했는 지(권한이 있는 지) 확인해서 children으로 받은 내용물을 보여줄 지 말지 결정하는 컴포넌트예요! :)\n// React.memo는 메모이제이션을 통해 컴포넌트가 여러번 렌더링 되지 않도록 막아줘요.\n// 내용이 기억나지 않으시면 5주차를 참고해주세요! 혹은 구글에 React.memo를 검색해보세요!\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Permit = /*#__PURE__*/React.memo(_c = _s(props => {\n  _s();\n\n  const is_login = useSelector(state => state.user.is_login);\n  const _session_key = `firebase:authUser:${apiKey}:[DEFAULT]`;\n  const is_session = sessionStorage.getItem(_session_key) ? true : false; //   세션과 리덕스 내 로그인 여부 값을 사용해 로그인했는 지 여부를 판단합니다!\n\n  if (is_session && is_login) {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 12\n    }, this);\n  }\n\n  return null;\n}, \"2VexXuUgB8o5Iyem/5fW9LFG6ys=\", false, function () {\n  return [useSelector];\n}));\n_c2 = Permit;\nexport default Permit;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Permit$React.memo\");\n$RefreshReg$(_c2, \"Permit\");","map":{"version":3,"sources":["/Users/frankie/sparta/hanghae_react/magazine_test/src/shared/Permit.js"],"names":["React","useSelector","apiKey","Permit","memo","props","is_login","state","user","_session_key","is_session","sessionStorage","getItem","children"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,MAAT,QAAuB,YAAvB,C,CAEA;AACA;AACA;;;AACA,MAAMC,MAAM,gBAAGH,KAAK,CAACI,IAAN,SAAYC,KAAD,IAAW;AAAA;;AACnC,QAAMC,QAAQ,GAAGL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWF,QAAvB,CAA5B;AAEA,QAAMG,YAAY,GAAI,qBAAoBP,MAAO,YAAjD;AAEA,QAAMQ,UAAU,GAAGC,cAAc,CAACC,OAAf,CAAuBH,YAAvB,IAAuC,IAAvC,GAA8C,KAAjE,CALmC,CAOrC;;AACE,MAAIC,UAAU,IAAIJ,QAAlB,EAA4B;AAC1B,wBAAO,QAAC,KAAD,CAAO,QAAP;AAAA,gBAAiBD,KAAK,CAACQ;AAAvB;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,SAAO,IAAP;AACD,CAbc;AAAA,UACIZ,WADJ;AAAA,GAAf;MAAME,M;AAeN,eAAeA,MAAf","sourcesContent":["import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { apiKey } from \"./firebase\";\n\n// 로그인을 했는 지(권한이 있는 지) 확인해서 children으로 받은 내용물을 보여줄 지 말지 결정하는 컴포넌트예요! :)\n// React.memo는 메모이제이션을 통해 컴포넌트가 여러번 렌더링 되지 않도록 막아줘요.\n// 내용이 기억나지 않으시면 5주차를 참고해주세요! 혹은 구글에 React.memo를 검색해보세요!\nconst Permit = React.memo((props) => {\n  const is_login = useSelector((state) => state.user.is_login);\n\n  const _session_key = `firebase:authUser:${apiKey}:[DEFAULT]`;\n\n  const is_session = sessionStorage.getItem(_session_key) ? true : false;\n\n//   세션과 리덕스 내 로그인 여부 값을 사용해 로그인했는 지 여부를 판단합니다!\n  if (is_session && is_login) {\n    return <React.Fragment>{props.children}</React.Fragment>;\n  }\n\n  return null;\n});\n\nexport default Permit;\n"]},"metadata":{},"sourceType":"module"}