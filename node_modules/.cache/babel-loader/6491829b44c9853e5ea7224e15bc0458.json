{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/frankie/sparta/hanghae_react/magazine_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2;import React from\"react\";import styled from\"styled-components\";import{Text,Grid}from\"./index\";// 인풋 컴포넌트\n/**\n * \n * @param {*} props \n * - label 인풋 박스 위에 넣어줄 텍스트 \n * - placeholder 인풋 박스에 미리 넣어줄 텍스트\n * - _onChange 인풋에 들어갈 값(text, file 등)이 변경되면 실행할 함수\n * - type 인풋 박스의 타입 (file, text 등)\n * - multiline 여러 줄(엔터 포함)을 보여줄 지 말지 여부 (input과 textarea로 분기할거예요.)\n * - value 인풋 박스의 값\n * - is_submit 엔터키 이벤트를 줄지 말지 여부 boolean\n * - onSubmit 엔터키 이벤트에서 실행할 함수(onKeyPress 이벤트를 사용해요!)\n * @returns \n */import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Input=function Input(props){var label=props.label,placeholder=props.placeholder,_onChange=props._onChange,_onClick=props._onClick,type=props.type,multiLine=props.multiLine,value=props.value,is_submit=props.is_submit,onSubmit=props.onSubmit;if(multiLine){return/*#__PURE__*/_jsxs(Grid,{children:[label&&/*#__PURE__*/_jsx(Text,{margin:\"0px\",children:label}),/*#__PURE__*/_jsx(ElTextarea,{rows:10,value:value,placeholder:placeholder,onChange:_onChange,onClick:_onClick})]});}return/*#__PURE__*/_jsx(React.Fragment,{children:/*#__PURE__*/_jsxs(Grid,{children:[label&&/*#__PURE__*/_jsx(Text,{margin:\"0px\",children:label}),is_submit?/*#__PURE__*/_jsx(ElInput,{type:type,placeholder:placeholder,onChange:_onChange,onClick:_onClick,value:value,onKeyPress:function onKeyPress(e){if(e.key===\"Enter\"){onSubmit(e);}}}):/*#__PURE__*/_jsx(ElInput,{type:type,placeholder:placeholder,onChange:_onChange,onClick:_onClick})]})});};Input.defaultProps={multiLine:false,label:false,placeholder:\"텍스트를 입력해주세요.\",type:\"text\",value:\"\",is_submit:false,onSubmit:function onSubmit(){},_onChange:function _onChange(){},_onClick:function _onClick(){}};var ElTextarea=styled.textarea(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  border: 1px solid #212121;\\n  width: 100%;\\n  padding: 12px 4px;\\n  box-sizing: border-box;\\n\"])));var ElInput=styled.input(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  border: 1px solid #212121;\\n  width: 100%;\\n  padding: 12px 4px;\\n  box-sizing: border-box;\\n\"])));export default Input;","map":{"version":3,"sources":["/Users/frankie/sparta/hanghae_react/magazine_test/src/elements/Input.js"],"names":["React","styled","Text","Grid","Input","props","label","placeholder","_onChange","_onClick","type","multiLine","value","is_submit","onSubmit","e","key","defaultProps","ElTextarea","textarea","ElInput","input"],"mappings":"6NAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CAEA,OAASC,IAAT,CAAeC,IAAf,KAA2B,SAA3B,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,G,wFACA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACC,KAAD,CAAW,IAErBC,CAAAA,KAFqB,CAWnBD,KAXmB,CAErBC,KAFqB,CAGrBC,WAHqB,CAWnBF,KAXmB,CAGrBE,WAHqB,CAIrBC,SAJqB,CAWnBH,KAXmB,CAIrBG,SAJqB,CAKrBC,QALqB,CAWnBJ,KAXmB,CAKrBI,QALqB,CAMrBC,IANqB,CAWnBL,KAXmB,CAMrBK,IANqB,CAOrBC,SAPqB,CAWnBN,KAXmB,CAOrBM,SAPqB,CAQrBC,KARqB,CAWnBP,KAXmB,CAQrBO,KARqB,CASrBC,SATqB,CAWnBR,KAXmB,CASrBQ,SATqB,CAUrBC,QAVqB,CAWnBT,KAXmB,CAUrBS,QAVqB,CAavB,GAAIH,SAAJ,CAAe,CACb,mBACE,MAAC,IAAD,YACGL,KAAK,eAAI,KAAC,IAAD,EAAM,MAAM,CAAC,KAAb,UAAoBA,KAApB,EADZ,cAEE,KAAC,UAAD,EACE,IAAI,CAAE,EADR,CAEE,KAAK,CAAEM,KAFT,CAGE,WAAW,CAAEL,WAHf,CAIE,QAAQ,CAAEC,SAJZ,CAKE,OAAO,CAAEC,QALX,EAFF,GADF,CAYD,CAED,mBACE,KAAC,KAAD,CAAO,QAAP,wBACE,MAAC,IAAD,YACGH,KAAK,eAAI,KAAC,IAAD,EAAM,MAAM,CAAC,KAAb,UAAoBA,KAApB,EADZ,CAEGO,SAAS,cACR,KAAC,OAAD,EACE,IAAI,CAAEH,IADR,CAEE,WAAW,CAAEH,WAFf,CAGE,QAAQ,CAAEC,SAHZ,CAIE,OAAO,CAAEC,QAJX,CAKE,KAAK,CAAEG,KALT,CAME,UAAU,CAAE,oBAACG,CAAD,CAAO,CACjB,GAAIA,CAAC,CAACC,GAAF,GAAU,OAAd,CAAuB,CACrBF,QAAQ,CAACC,CAAD,CAAR,CACD,CACF,CAVH,EADQ,cAcR,KAAC,OAAD,EAAS,IAAI,CAAEL,IAAf,CAAqB,WAAW,CAAEH,WAAlC,CAA+C,QAAQ,CAAEC,SAAzD,CAAoE,OAAO,CAAEC,QAA7E,EAhBJ,GADF,EADF,CAuBD,CAnDD,CAqDAL,KAAK,CAACa,YAAN,CAAqB,CACnBN,SAAS,CAAE,KADQ,CAEnBL,KAAK,CAAE,KAFY,CAGnBC,WAAW,CAAE,cAHM,CAInBG,IAAI,CAAE,MAJa,CAKnBE,KAAK,CAAE,EALY,CAMnBC,SAAS,CAAE,KANQ,CAOnBC,QAAQ,CAAE,mBAAM,CAAE,CAPC,CAQnBN,SAAS,CAAE,oBAAM,CAAE,CARA,CASnBC,QAAQ,CAAE,mBAAM,CAAE,CATC,CAArB,CAYA,GAAMS,CAAAA,UAAU,CAAGjB,MAAM,CAACkB,QAAV,kKAAhB,CAOA,GAAMC,CAAAA,OAAO,CAAGnB,MAAM,CAACoB,KAAV,oKAAb,CAOA,cAAejB,CAAAA,KAAf","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { Text, Grid } from \"./index\";\n\n// 인풋 컴포넌트\n/**\n * \n * @param {*} props \n * - label 인풋 박스 위에 넣어줄 텍스트 \n * - placeholder 인풋 박스에 미리 넣어줄 텍스트\n * - _onChange 인풋에 들어갈 값(text, file 등)이 변경되면 실행할 함수\n * - type 인풋 박스의 타입 (file, text 등)\n * - multiline 여러 줄(엔터 포함)을 보여줄 지 말지 여부 (input과 textarea로 분기할거예요.)\n * - value 인풋 박스의 값\n * - is_submit 엔터키 이벤트를 줄지 말지 여부 boolean\n * - onSubmit 엔터키 이벤트에서 실행할 함수(onKeyPress 이벤트를 사용해요!)\n * @returns \n */\nconst Input = (props) => {\n  const {\n    label,\n    placeholder,\n    _onChange,\n    _onClick,\n    type,\n    multiLine,\n    value,\n    is_submit,\n    onSubmit,\n  } = props;\n\n  if (multiLine) {\n    return (\n      <Grid>\n        {label && <Text margin=\"0px\">{label}</Text>}\n        <ElTextarea\n          rows={10}\n          value={value}\n          placeholder={placeholder}\n          onChange={_onChange}\n          onClick={_onClick}\n        ></ElTextarea>\n      </Grid>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <Grid>\n        {label && <Text margin=\"0px\">{label}</Text>}\n        {is_submit ? (\n          <ElInput\n            type={type}\n            placeholder={placeholder}\n            onChange={_onChange}\n            onClick={_onClick}\n            value={value}\n            onKeyPress={(e) => {\n              if (e.key === \"Enter\") {\n                onSubmit(e);\n              }\n            }}\n          />\n        ) : (\n          <ElInput type={type} placeholder={placeholder} onChange={_onChange} onClick={_onClick}/>\n        )}\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nInput.defaultProps = {\n  multiLine: false,\n  label: false,\n  placeholder: \"텍스트를 입력해주세요.\",\n  type: \"text\",\n  value: \"\",\n  is_submit: false,\n  onSubmit: () => {},\n  _onChange: () => {},\n  _onClick: () => {},\n};\n\nconst ElTextarea = styled.textarea`\n  border: 1px solid #212121;\n  width: 100%;\n  padding: 12px 4px;\n  box-sizing: border-box;\n`;\n\nconst ElInput = styled.input`\n  border: 1px solid #212121;\n  width: 100%;\n  padding: 12px 4px;\n  box-sizing: border-box;\n`;\n\nexport default Input;\n"]},"metadata":{},"sourceType":"module"}