{"ast":null,"code":"import\"./App.css\";import React from\"react\";import{ConnectedRouter}from\"connected-react-router\";import{history}from\"../redux/configureStore\";import{Login,Signup,PostDetail,PostList,PostWrite}from\"../pages\";import{Header}from\"../components\";import{Grid,Button}from\"../elements\";import{useDispatch}from\"react-redux\";import{actionCreators as userActions}from\"../redux/modules/user\";import{actionCreators as imageActions}from\"../redux/modules/image\";import{apiKey}from\"./firebase\";import{Route}from\"react-router-dom\";import Permit from\"./Permit\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var dispatch=useDispatch();var _session_key=\"firebase:authUser:\".concat(apiKey,\":[DEFAULT]\");var is_session=sessionStorage.getItem(_session_key)?true:false;React.useEffect(function(){if(is_session){dispatch(userActions.loginCheckFB());}},[]);return/*#__PURE__*/_jsxs(Grid,{is_mob:true,bg:\"linear-gradient(45deg, #e66465, #9198e5)\",children:[/*#__PURE__*/_jsx(Grid,{padding:\"0px\",maxwidth:\"33.750em\",margin:\"0px auto\",bg:\"white\",children:/*#__PURE__*/_jsxs(ConnectedRouter,{history:history,children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsx(Route,{path:\"/\",exact:true,component:PostList}),/*#__PURE__*/_jsx(Route,{path:\"/login\",exact:true,component:Login}),/*#__PURE__*/_jsx(Route,{path:\"/signup\",exact:true,component:Signup}),/*#__PURE__*/_jsx(Route,{path:\"/write\",exact:true,component:PostWrite}),/*#__PURE__*/_jsx(Route,{path:\"/write/:id\",exact:true,component:PostWrite}),/*#__PURE__*/_jsx(Route,{path:\"/post/:id\",exact:true,component:PostDetail})]})}),/*#__PURE__*/_jsx(Permit,{children:/*#__PURE__*/_jsx(Button,{is_float:true,_onClick:function _onClick(){dispatch(imageActions.setPreview(null));history.push(\"/write\");},children:\"+\"})})]});}export default App;","map":{"version":3,"sources":["/Users/frankie/sparta/hanghae_react/magazine_test/src/shared/App.js"],"names":["React","ConnectedRouter","history","Login","Signup","PostDetail","PostList","PostWrite","Header","Grid","Button","useDispatch","actionCreators","userActions","imageActions","apiKey","Route","Permit","App","dispatch","_session_key","is_session","sessionStorage","getItem","useEffect","loginCheckFB","setPreview","push"],"mappings":"AAAA,MAAO,WAAP,CACA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,eAAT,KAAgC,wBAAhC,CACA,OAASC,OAAT,KAAwB,yBAAxB,CAEA,OAASC,KAAT,CAAgBC,MAAhB,CAAwBC,UAAxB,CAAoCC,QAApC,CAA8CC,SAA9C,KAA+D,UAA/D,CAEA,OAASC,MAAT,KAAuB,eAAvB,CACA,OAASC,IAAT,CAAeC,MAAf,KAA6B,aAA7B,CAEA,OAASC,WAAT,KAA4B,aAA5B,CACA,OAASC,cAAc,GAAIC,CAAAA,WAA3B,KAA8C,uBAA9C,CACA,OAASD,cAAc,GAAIE,CAAAA,YAA3B,KAA+C,wBAA/C,CAEA,OAASC,MAAT,KAAuB,YAAvB,CACA,OAASC,KAAT,KAAsB,kBAAtB,CAEA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,C,wFAEA,QAASC,CAAAA,GAAT,EAAe,CACb,GAAMC,CAAAA,QAAQ,CAAGR,WAAW,EAA5B,CAEA,GAAMS,CAAAA,YAAY,6BAAwBL,MAAxB,cAAlB,CACA,GAAMM,CAAAA,UAAU,CAAGC,cAAc,CAACC,OAAf,CAAuBH,YAAvB,EAAuC,IAAvC,CAA8C,KAAjE,CAEApB,KAAK,CAACwB,SAAN,CAAgB,UAAM,CACpB,GAAIH,UAAJ,CAAgB,CACdF,QAAQ,CAACN,WAAW,CAACY,YAAZ,EAAD,CAAR,CACD,CACF,CAJD,CAIG,EAJH,EAMA,mBACE,MAAC,IAAD,EAAM,MAAM,KAAZ,CAAa,EAAE,CAAC,0CAAhB,wBACE,KAAC,IAAD,EAAM,OAAO,CAAC,KAAd,CAAoB,QAAQ,CAAC,UAA7B,CAAwC,MAAM,CAAC,UAA/C,CAA0D,EAAE,CAAC,OAA7D,uBACE,MAAC,eAAD,EAAiB,OAAO,CAAEvB,OAA1B,wBACE,KAAC,MAAD,IADF,cAGE,KAAC,KAAD,EAAO,IAAI,CAAC,GAAZ,CAAgB,KAAK,KAArB,CAAsB,SAAS,CAAEI,QAAjC,EAHF,cAIE,KAAC,KAAD,EAAO,IAAI,CAAC,QAAZ,CAAqB,KAAK,KAA1B,CAA2B,SAAS,CAAEH,KAAtC,EAJF,cAKE,KAAC,KAAD,EAAO,IAAI,CAAC,SAAZ,CAAsB,KAAK,KAA3B,CAA4B,SAAS,CAAEC,MAAvC,EALF,cAME,KAAC,KAAD,EAAO,IAAI,CAAC,QAAZ,CAAqB,KAAK,KAA1B,CAA2B,SAAS,CAAEG,SAAtC,EANF,cAOE,KAAC,KAAD,EAAO,IAAI,CAAC,YAAZ,CAAyB,KAAK,KAA9B,CAA+B,SAAS,CAAEA,SAA1C,EAPF,cAQE,KAAC,KAAD,EAAO,IAAI,CAAC,WAAZ,CAAwB,KAAK,KAA7B,CAA8B,SAAS,CAAEF,UAAzC,EARF,GADF,EADF,cAaE,KAAC,MAAD,wBACE,KAAC,MAAD,EACE,QAAQ,KADV,CAEE,QAAQ,CAAE,mBAAM,CACdc,QAAQ,CAACL,YAAY,CAACY,UAAb,CAAwB,IAAxB,CAAD,CAAR,CACAxB,OAAO,CAACyB,IAAR,CAAa,QAAb,EACD,CALH,eADF,EAbF,GADF,CA2BD,CAED,cAAeT,CAAAA,GAAf","sourcesContent":["import \"./App.css\";\nimport React from \"react\";\n\nimport { ConnectedRouter } from \"connected-react-router\";\nimport { history } from \"../redux/configureStore\";\n\nimport { Login, Signup, PostDetail, PostList, PostWrite } from \"../pages\";\n\nimport { Header } from \"../components\";\nimport { Grid, Button } from \"../elements\";\n\nimport { useDispatch } from \"react-redux\";\nimport { actionCreators as userActions } from \"../redux/modules/user\";\nimport { actionCreators as imageActions } from \"../redux/modules/image\";\n\nimport { apiKey } from \"./firebase\";\nimport { Route } from \"react-router-dom\";\n\nimport Permit from \"./Permit\";\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  const _session_key = `firebase:authUser:${apiKey}:[DEFAULT]`;\n  const is_session = sessionStorage.getItem(_session_key) ? true : false;\n\n  React.useEffect(() => {\n    if (is_session) {\n      dispatch(userActions.loginCheckFB());\n    }\n  }, []);\n\n  return (\n    <Grid is_mob bg=\"linear-gradient(45deg, #e66465, #9198e5)\">\n      <Grid padding=\"0px\" maxwidth=\"33.750em\" margin=\"0px auto\" bg=\"white\">\n        <ConnectedRouter history={history}>\n          <Header></Header>\n          {/* 아직 목록 페이지가 없으니, 루트 경로(/)는 Login을 엮어줄게요! */}\n          <Route path=\"/\" exact component={PostList} />\n          <Route path=\"/login\" exact component={Login} />\n          <Route path=\"/signup\" exact component={Signup} />\n          <Route path=\"/write\" exact component={PostWrite} />\n          <Route path=\"/write/:id\" exact component={PostWrite} />\n          <Route path=\"/post/:id\" exact component={PostDetail} />\n        </ConnectedRouter>\n      </Grid>\n      <Permit>\n        <Button\n          is_float\n          _onClick={() => {\n            dispatch(imageActions.setPreview(null));\n            history.push(\"/write\");\n          }}\n        >\n          +\n        </Button>\n      </Permit>\n    </Grid>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}