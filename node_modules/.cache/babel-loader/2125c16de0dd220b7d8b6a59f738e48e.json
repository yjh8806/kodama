{"ast":null,"code":"var _jsxFileName = \"/Users/frankie/sparta/hanghae_react/magazine_test/src/elements/Input.js\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Text, Grid } from \"./index\"; // 인풋 컴포넌트\n\n/**\n * \n * @param {*} props \n * - label 인풋 박스 위에 넣어줄 텍스트 \n * - placeholder 인풋 박스에 미리 넣어줄 텍스트\n * - _onChange 인풋에 들어갈 값(text, file 등)이 변경되면 실행할 함수\n * - type 인풋 박스의 타입 (file, text 등)\n * - multiline 여러 줄(엔터 포함)을 보여줄 지 말지 여부 (input과 textarea로 분기할거예요.)\n * - value 인풋 박스의 값\n * - is_submit 엔터키 이벤트를 줄지 말지 여부 boolean\n * - onSubmit 엔터키 이벤트에서 실행할 함수(onKeyPress 이벤트를 사용해요!)\n * @returns \n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Input = props => {\n  const {\n    label,\n    placeholder,\n    _onChange,\n    type,\n    multiLine,\n    value,\n    is_submit,\n    onSubmit\n  } = props;\n\n  if (multiLine) {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      children: [label && /*#__PURE__*/_jsxDEV(Text, {\n        margin: \"0px\",\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(ElTextarea, {\n        rows: 10,\n        value: value,\n        placeholder: placeholder,\n        onChange: _onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      children: [label && /*#__PURE__*/_jsxDEV(Text, {\n        margin: \"0px\",\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 19\n      }, this), is_submit ? /*#__PURE__*/_jsxDEV(ElInput, {\n        type: type,\n        placeholder: placeholder,\n        onChange: _onChange,\n        value: value,\n        onKeyPress: e => {\n          if (e.key === \"Enter\") {\n            onSubmit(e);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(ElInput, {\n        type: type,\n        placeholder: placeholder,\n        onChange: _onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Input;\nInput.defaultProps = {\n  multiLine: false,\n  label: false,\n  placeholder: \"텍스트를 입력해주세요.\",\n  type: \"text\",\n  value: \"\",\n  is_submit: false,\n  onSubmit: () => {},\n  _onChange: () => {}\n};\nconst ElTextarea = styled.textarea`\n  border: 1px solid #212121;\n  width: 100%;\n  padding: 12px 4px;\n  box-sizing: border-box;\n`;\n_c2 = ElTextarea;\nconst ElInput = styled.input`\n  border: 1px solid #212121;\n  width: 100%;\n  padding: 12px 4px;\n  box-sizing: border-box;\n`;\n_c3 = ElInput;\nexport default Input;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Input\");\n$RefreshReg$(_c2, \"ElTextarea\");\n$RefreshReg$(_c3, \"ElInput\");","map":{"version":3,"sources":["/Users/frankie/sparta/hanghae_react/magazine_test/src/elements/Input.js"],"names":["React","styled","Text","Grid","Input","props","label","placeholder","_onChange","type","multiLine","value","is_submit","onSubmit","e","key","defaultProps","ElTextarea","textarea","ElInput","input"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,IAAT,EAAeC,IAAf,QAA2B,SAA3B,C,CAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACvB,QAAM;AACJC,IAAAA,KADI;AAEJC,IAAAA,WAFI;AAGJC,IAAAA,SAHI;AAIJC,IAAAA,IAJI;AAKJC,IAAAA,SALI;AAMJC,IAAAA,KANI;AAOJC,IAAAA,SAPI;AAQJC,IAAAA;AARI,MASFR,KATJ;;AAWA,MAAIK,SAAJ,EAAe;AACb,wBACE,QAAC,IAAD;AAAA,iBACGJ,KAAK,iBAAI,QAAC,IAAD;AAAM,QAAA,MAAM,EAAC,KAAb;AAAA,kBAAoBA;AAApB;AAAA;AAAA;AAAA;AAAA,cADZ,eAEE,QAAC,UAAD;AACE,QAAA,IAAI,EAAE,EADR;AAEE,QAAA,KAAK,EAAEK,KAFT;AAGE,QAAA,WAAW,EAAEJ,WAHf;AAIE,QAAA,QAAQ,EAAEC;AAJZ;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AAED,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,2BACE,QAAC,IAAD;AAAA,iBACGF,KAAK,iBAAI,QAAC,IAAD;AAAM,QAAA,MAAM,EAAC,KAAb;AAAA,kBAAoBA;AAApB;AAAA;AAAA;AAAA;AAAA,cADZ,EAEGM,SAAS,gBACR,QAAC,OAAD;AACE,QAAA,IAAI,EAAEH,IADR;AAEE,QAAA,WAAW,EAAEF,WAFf;AAGE,QAAA,QAAQ,EAAEC,SAHZ;AAIE,QAAA,KAAK,EAAEG,KAJT;AAKE,QAAA,UAAU,EAAGG,CAAD,IAAO;AACjB,cAAIA,CAAC,CAACC,GAAF,KAAU,OAAd,EAAuB;AACrBF,YAAAA,QAAQ,CAACC,CAAD,CAAR;AACD;AACF;AATH;AAAA;AAAA;AAAA;AAAA,cADQ,gBAaR,QAAC,OAAD;AAAS,QAAA,IAAI,EAAEL,IAAf;AAAqB,QAAA,WAAW,EAAEF,WAAlC;AAA+C,QAAA,QAAQ,EAAEC;AAAzD;AAAA;AAAA;AAAA;AAAA,cAfJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CAhDD;;KAAMJ,K;AAkDNA,KAAK,CAACY,YAAN,GAAqB;AACnBN,EAAAA,SAAS,EAAE,KADQ;AAEnBJ,EAAAA,KAAK,EAAE,KAFY;AAGnBC,EAAAA,WAAW,EAAE,cAHM;AAInBE,EAAAA,IAAI,EAAE,MAJa;AAKnBE,EAAAA,KAAK,EAAE,EALY;AAMnBC,EAAAA,SAAS,EAAE,KANQ;AAOnBC,EAAAA,QAAQ,EAAE,MAAM,CAAE,CAPC;AAQnBL,EAAAA,SAAS,EAAE,MAAM,CAAE;AARA,CAArB;AAWA,MAAMS,UAAU,GAAGhB,MAAM,CAACiB,QAAS;AACnC;AACA;AACA;AACA;AACA,CALA;MAAMD,U;AAON,MAAME,OAAO,GAAGlB,MAAM,CAACmB,KAAM;AAC7B;AACA;AACA;AACA;AACA,CALA;MAAMD,O;AAON,eAAef,KAAf","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { Text, Grid } from \"./index\";\n\n// 인풋 컴포넌트\n/**\n * \n * @param {*} props \n * - label 인풋 박스 위에 넣어줄 텍스트 \n * - placeholder 인풋 박스에 미리 넣어줄 텍스트\n * - _onChange 인풋에 들어갈 값(text, file 등)이 변경되면 실행할 함수\n * - type 인풋 박스의 타입 (file, text 등)\n * - multiline 여러 줄(엔터 포함)을 보여줄 지 말지 여부 (input과 textarea로 분기할거예요.)\n * - value 인풋 박스의 값\n * - is_submit 엔터키 이벤트를 줄지 말지 여부 boolean\n * - onSubmit 엔터키 이벤트에서 실행할 함수(onKeyPress 이벤트를 사용해요!)\n * @returns \n */\nconst Input = (props) => {\n  const {\n    label,\n    placeholder,\n    _onChange,\n    type,\n    multiLine,\n    value,\n    is_submit,\n    onSubmit,\n  } = props;\n\n  if (multiLine) {\n    return (\n      <Grid>\n        {label && <Text margin=\"0px\">{label}</Text>}\n        <ElTextarea\n          rows={10}\n          value={value}\n          placeholder={placeholder}\n          onChange={_onChange}\n        ></ElTextarea>\n      </Grid>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <Grid>\n        {label && <Text margin=\"0px\">{label}</Text>}\n        {is_submit ? (\n          <ElInput\n            type={type}\n            placeholder={placeholder}\n            onChange={_onChange}\n            value={value}\n            onKeyPress={(e) => {\n              if (e.key === \"Enter\") {\n                onSubmit(e);\n              }\n            }}\n          />\n        ) : (\n          <ElInput type={type} placeholder={placeholder} onChange={_onChange} />\n        )}\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nInput.defaultProps = {\n  multiLine: false,\n  label: false,\n  placeholder: \"텍스트를 입력해주세요.\",\n  type: \"text\",\n  value: \"\",\n  is_submit: false,\n  onSubmit: () => {},\n  _onChange: () => {},\n};\n\nconst ElTextarea = styled.textarea`\n  border: 1px solid #212121;\n  width: 100%;\n  padding: 12px 4px;\n  box-sizing: border-box;\n`;\n\nconst ElInput = styled.input`\n  border: 1px solid #212121;\n  width: 100%;\n  padding: 12px 4px;\n  box-sizing: border-box;\n`;\n\nexport default Input;\n"]},"metadata":{},"sourceType":"module"}