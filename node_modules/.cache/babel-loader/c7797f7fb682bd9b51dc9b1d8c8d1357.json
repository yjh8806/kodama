{"ast":null,"code":"var _jsxFileName = \"/Users/frankie/sparta/hanghae_react/magazine_test/src/components/Header.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Grid, Text, Button, Image } from \"../elements\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\nimport kodama from '../shared/kodama_icon.jpeg';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { actionCreators as userActions } from \"../redux/modules/user\";\nimport { history } from \"../redux/configureStore\";\nimport { apiKey } from \"../shared/firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Header = props => {\n  _s();\n\n  const dispatch = useDispatch(); //   리덕스에서 로그인 중인지 상태값 가져오기\n\n  const is_login = useSelector(state => state.user.is_login); //   세션에 기록된 로그인 정보 가져오기\n  // 어떻게 생겼는 지는 파이어베이스에서 결정해요! (우리가 결정할 수 있는 건 저장 위치뿐..!)\n\n  const _session_key = `firebase:authUser:${apiKey}:[DEFAULT]`; //   세션이(로그인 정보겠죠!) 있나없나 확인해요!\n\n  const is_session = sessionStorage.getItem(_session_key) ? true : false; //  아래 주석을 풀고 세션이 있나 없나 확인해볼까요? :)\n  //   console.log(is_session);\n  // 리덕스에서 is_login이 true로 저장되어 있고, 세션도 있으면 로그인 중인 것으로 판단해요!\n  // 로그인 한 뒤 헤더를 보여줄거예요.\n\n  if (is_login && is_session) {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        padding: \"0px\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          padding: \"16px 0px\",\n          is_flex_main: true,\n          children: [/*#__PURE__*/_jsxDEV(Image, {\n            shape: \"main_circle\",\n            src: kodama\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            main: true,\n            size: \"1.8em\",\n            margin: \"0em 0em 0em 0.3em\",\n            bold: true,\n            height: \"13vh\",\n            children: \"\\uD835\\uDD42\\uD835\\uDD46\\uD835\\uDD3B\\uD835\\uDD38\\uD835\\uDD44\\uD835\\uDD38 \\uD835\\uDD44\\uD835\\uDD38\\uD835\\uDD3E\\uD835\\uDD38\\u2124\\uD835\\uDD40\\u2115\\uD835\\uDD3C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        is_header: true,\n        is_flex: true,\n        width: \"100%\",\n        maxwidth: \"33.750em\",\n        minwidth: \"24em\",\n        margin: \"0px auto\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          padding: \"5px 30px\",\n          _onClick: () => {\n            history.push(\"/\");\n          },\n          children: /*#__PURE__*/_jsxDEV(HomeIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          padding: \"5px 30px\",\n          _onClick: () => {\n            window.alert(\"로그아웃 완료!\");\n            dispatch(userActions.logoutFB());\n          },\n          children: /*#__PURE__*/_jsxDEV(ExitToAppIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  } //   로그인 중이 아니라면 로그인 전 헤더를 보여줍니다.\n\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      padding: \"0px\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        padding: \"16px 0px\",\n        is_flex: true,\n        children: [/*#__PURE__*/_jsxDEV(Image, {\n          is_flex: true,\n          shape: \"main_circle\",\n          src: kodama\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          main: true,\n          size: \"1.8em\",\n          margin: \"0px auto\",\n          bold: true,\n          height: \"13vh\",\n          children: \"\\uD835\\uDD42\\uD835\\uDD46\\uD835\\uDD3B\\uD835\\uDD38\\uD835\\uDD44\\uD835\\uDD38 \\uD835\\uDD44\\uD835\\uDD38\\uD835\\uDD3E\\uD835\\uDD38\\u2124\\uD835\\uDD40\\u2115\\uD835\\uDD3C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      is_header: true,\n      is_flex: true,\n      width: \"100%\",\n      maxwidth: \"33.750em\",\n      minwidth: \"24em\",\n      margin: \"0px auto\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        padding: \"5px 30px\",\n        _onClick: () => {\n          history.push(\"/\");\n        },\n        children: /*#__PURE__*/_jsxDEV(HomeIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        padding: \"5px 30px\",\n        _onClick: () => {\n          history.push(\"/login\");\n        },\n        children: /*#__PURE__*/_jsxDEV(VpnKeyIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        padding: \"5px 30px\",\n        _onClick: () => {\n          history.push(\"/signup\");\n        },\n        children: /*#__PURE__*/_jsxDEV(AssignmentIndIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Header, \"rqV/59BN1bQyz9K3dplxzPvR5yc=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Header;\nHeader.defaultProps = {};\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/Users/frankie/sparta/hanghae_react/magazine_test/src/components/Header.js"],"names":["React","Grid","Text","Button","Image","ExitToAppIcon","HomeIcon","AssignmentIndIcon","VpnKeyIcon","kodama","useSelector","useDispatch","actionCreators","userActions","history","apiKey","Header","props","dispatch","is_login","state","user","_session_key","is_session","sessionStorage","getItem","push","window","alert","logoutFB","defaultProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Grid, Text, Button, Image } from \"../elements\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\nimport kodama from '../shared/kodama_icon.jpeg';\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { actionCreators as userActions } from \"../redux/modules/user\";\n\nimport { history } from \"../redux/configureStore\";\nimport { apiKey } from \"../shared/firebase\";\n\nconst Header = (props) => {\n  const dispatch = useDispatch();\n\n  //   리덕스에서 로그인 중인지 상태값 가져오기\n  const is_login = useSelector((state) => state.user.is_login);\n\n  //   세션에 기록된 로그인 정보 가져오기\n  // 어떻게 생겼는 지는 파이어베이스에서 결정해요! (우리가 결정할 수 있는 건 저장 위치뿐..!)\n  const _session_key = `firebase:authUser:${apiKey}:[DEFAULT]`;\n\n  //   세션이(로그인 정보겠죠!) 있나없나 확인해요!\n  const is_session = sessionStorage.getItem(_session_key) ? true : false;\n  //  아래 주석을 풀고 세션이 있나 없나 확인해볼까요? :)\n  //   console.log(is_session);\n\n  // 리덕스에서 is_login이 true로 저장되어 있고, 세션도 있으면 로그인 중인 것으로 판단해요!\n  // 로그인 한 뒤 헤더를 보여줄거예요.\n  if (is_login && is_session) {\n    return (\n      <React.Fragment>\n        <Grid padding=\"0px\">\n          <Grid padding=\"16px 0px\" is_flex_main>\n            <Image shape=\"main_circle\" src={kodama}/>\n            <Text\n              main\n              size=\"1.8em\"\n              margin=\"0em 0em 0em 0.3em\"\n              bold\n              height=\"13vh\"\n            >\n              𝕂𝕆𝔻𝔸𝕄𝔸 𝕄𝔸𝔾𝔸ℤ𝕀ℕ𝔼\n            </Text>\n          </Grid>\n        </Grid>\n        <Grid\n          is_header\n          is_flex\n          width=\"100%\"\n          maxwidth=\"33.750em\"\n          minwidth=\"24em\"\n          margin=\"0px auto\"\n        >\n          <Button\n            padding=\"5px 30px\"\n            _onClick={() => {\n              history.push(\"/\");\n            }}\n          >\n            <HomeIcon />\n          </Button>\n          <Button\n            padding=\"5px 30px\"\n            _onClick={() => {\n              window.alert(\"로그아웃 완료!\");\n              dispatch(userActions.logoutFB());\n            }}\n          >\n            <ExitToAppIcon />\n          </Button>\n        </Grid>\n      </React.Fragment>\n    );\n  }\n\n  //   로그인 중이 아니라면 로그인 전 헤더를 보여줍니다.\n  return (\n    <React.Fragment>\n      <Grid padding=\"0px\">\n        <Grid padding=\"16px 0px\" is_flex>\n          <Image is_flex shape=\"main_circle\" src={kodama}/>\n          <Text\n            main\n            size=\"1.8em\"\n            margin=\"0px auto\"\n            bold\n            height=\"13vh\"\n          >\n            𝕂𝕆𝔻𝔸𝕄𝔸 𝕄𝔸𝔾𝔸ℤ𝕀ℕ𝔼\n          </Text>\n        </Grid>\n      </Grid>\n      <Grid\n        is_header\n        is_flex\n        width=\"100%\"\n        maxwidth=\"33.750em\"\n        minwidth=\"24em\"\n        margin=\"0px auto\"\n      >\n        <Button\n          padding=\"5px 30px\"\n          _onClick={() => {\n            history.push(\"/\");\n          }}\n        >\n          <HomeIcon />\n        </Button>\n        <Button\n          padding=\"5px 30px\"\n          _onClick={() => {\n            history.push(\"/login\");\n          }}\n        >\n          <VpnKeyIcon />\n        </Button>\n        <Button\n          padding=\"5px 30px\"\n          _onClick={() => {\n            history.push(\"/signup\")\n          }}\n        >\n          <AssignmentIndIcon />\n        </Button>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nHeader.defaultProps = {};\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}