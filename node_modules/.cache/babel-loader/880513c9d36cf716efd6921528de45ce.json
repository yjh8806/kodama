{"ast":null,"code":"var _jsxFileName = \"/Users/frankie/sparta/hanghae_react/magazine_test/src/components/Post.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Grid, Image, Text, Button } from \"../elements\";\nimport { HeartButton } from \"./index\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { history } from \"../redux/configureStore\";\nimport { useDispatch } from \"react-redux\";\nimport { actionCreators as postActions } from \"../redux/modules/post\"; // 게시글 1개 뷰를 담당합니다.\n// layout_type에 따라 각각 타입에 맞는 레이아웃을 그려줄거예요.\n// layout_type : a, b, c\n//  - a : 텍스트가 위, 이미지가 아래인 레이아웃\n//  - b : 텍스트가 좌측, 이미지가 우측인 레이아웃\n//  - c : 텍스트가 우측, 이미지가 좌측인 레이아웃\n// image_url : 이미지 주소\n// like_cnt : 좋아요 갯수\n// insert_dt : 작성일시\n// user_info: 유저 정보 (딕셔너리 / user_name, user_id, user_profile를 가지고 있어요.)\n// is_me : 지금 로그인한 사용자가 작성자인지 아닌 지 판단해요.\n// id : 게시글 id\n// contents : 게시글 내용\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Post = /*#__PURE__*/React.memo(_c = _s(props => {\n  _s();\n\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        is_flex: true,\n        padding: \"16px\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          is_flex: true,\n          width: \"auto\",\n          children: [/*#__PURE__*/_jsxDEV(Image, {\n            shape: \"circle\",\n            src: props.src\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            bold: true,\n            children: props.user_info.user_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          is_flex: true,\n          width: \"auto\",\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            children: props.insert_dt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), props.is_me && /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              width: \"auto\",\n              margin: \"4px\",\n              padding: \"4px\",\n              borderRadius: \"10px\",\n              _onClick: e => {\n                //  이벤트 캡쳐링과 버블링을 막아요!\n                // 이벤트 캡쳐링, 버블링이 뭔지 검색해보기! :)\n                e.preventDefault();\n                e.stopPropagation();\n                history.push(`/write/${props.id}`);\n              },\n              children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), props.layout_type === \"a\" && /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          padding: \"16px\",\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            children: props.contents\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            shape: \"rectangle\",\n            src: props.image_url\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), props.layout_type === \"b\" && /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          is_flex: true,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            width: \"50%\",\n            padding: \"16px\",\n            children: /*#__PURE__*/_jsxDEV(Text, {\n              children: props.contents\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Image, {\n            shape: \"rectangle\",\n            src: props.image_url\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), props.layout_type === \"c\" && /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          is_flex: true,\n          children: [/*#__PURE__*/_jsxDEV(Image, {\n            shape: \"rectangle\",\n            src: props.image_url\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            width: \"50%\",\n            padding: \"16px\",\n            children: /*#__PURE__*/_jsxDEV(Text, {\n              children: props.contents\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        is_flex: true,\n        padding: \"16px\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          margin: \"0px\",\n          bold: true,\n          children: [\"\\uC88B\\uC544\\uC694 \", props.like_cnt, \"\\uAC1C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(HeartButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n}));\n_c2 = Post;\nPost.defaultProps = {\n  id: null,\n  user_info: {\n    user_id: \"\",\n    user_name: \"\",\n    user_profile: \"\"\n  },\n  image_url: \"\",\n  contents: \"\",\n  like_cnt: 10,\n  layout_type: \"a\",\n  insert_dt: \"2021-02-27 10:00:00\",\n  is_me: false\n};\nexport default Post;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Post$React.memo\");\n$RefreshReg$(_c2, \"Post\");","map":{"version":3,"sources":["/Users/frankie/sparta/hanghae_react/magazine_test/src/components/Post.js"],"names":["React","Grid","Image","Text","Button","HeartButton","EditIcon","history","useDispatch","actionCreators","postActions","Post","memo","props","dispatch","src","user_info","user_name","insert_dt","is_me","e","preventDefault","stopPropagation","push","id","layout_type","contents","image_url","like_cnt","defaultProps","user_id","user_profile"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Grid, Image, Text, Button } from \"../elements\";\nimport { HeartButton } from \"./index\";\nimport EditIcon from \"@material-ui/icons/Edit\";\n\nimport { history } from \"../redux/configureStore\";\n\nimport { useDispatch } from \"react-redux\";\nimport { actionCreators as postActions } from \"../redux/modules/post\";\n\n// 게시글 1개 뷰를 담당합니다.\n// layout_type에 따라 각각 타입에 맞는 레이아웃을 그려줄거예요.\n// layout_type : a, b, c\n//  - a : 텍스트가 위, 이미지가 아래인 레이아웃\n//  - b : 텍스트가 좌측, 이미지가 우측인 레이아웃\n//  - c : 텍스트가 우측, 이미지가 좌측인 레이아웃\n// image_url : 이미지 주소\n// like_cnt : 좋아요 갯수\n// insert_dt : 작성일시\n// user_info: 유저 정보 (딕셔너리 / user_name, user_id, user_profile를 가지고 있어요.)\n// is_me : 지금 로그인한 사용자가 작성자인지 아닌 지 판단해요.\n// id : 게시글 id\n// contents : 게시글 내용\nconst Post = React.memo((props) => {\n  const dispatch = useDispatch();\n\n  return (\n    <React.Fragment>\n      <Grid>\n        <Grid is_flex padding=\"16px\">\n          <Grid is_flex width=\"auto\">\n            <Image shape=\"circle\" src={props.src} />\n            <Text bold>{props.user_info.user_name}</Text>\n          </Grid>\n          <Grid is_flex width=\"auto\">\n            <Text>{props.insert_dt}</Text>\n            {props.is_me && (\n              <React.Fragment>\n                <Button\n                  width=\"auto\"\n                  margin=\"4px\"\n                  padding=\"4px\"\n                  borderRadius=\"10px\"\n                  _onClick={(e) => {\n                    //  이벤트 캡쳐링과 버블링을 막아요!\n                    // 이벤트 캡쳐링, 버블링이 뭔지 검색해보기! :)\n                    e.preventDefault();\n                    e.stopPropagation();\n                    history.push(`/write/${props.id}`);\n                  }}\n                >\n                  <EditIcon/>\n                </Button>\n              </React.Fragment>\n            )}\n          </Grid>\n        </Grid>\n\n        {/* layout type이 a일 때 */}\n        {props.layout_type === \"a\" && (\n          <React.Fragment>\n            <Grid padding=\"16px\">\n              <Text>{props.contents}</Text>\n            </Grid>\n            <Grid>\n              <Image shape=\"rectangle\" src={props.image_url} />\n            </Grid>\n          </React.Fragment>\n        )}\n\n        {/* layout type이 b일 때 */}\n        {props.layout_type === \"b\" && (\n          <React.Fragment>\n            <Grid is_flex>\n              <Grid width=\"50%\" padding=\"16px\">\n                <Text>{props.contents}</Text>\n              </Grid>\n              <Image shape=\"rectangle\" src={props.image_url} />\n            </Grid>\n          </React.Fragment>\n        )}\n\n        {/* layout type이 c일 때 */}\n        {props.layout_type === \"c\" && (\n          <React.Fragment>\n            <Grid is_flex>\n              <Image shape=\"rectangle\" src={props.image_url} />\n              <Grid width=\"50%\" padding=\"16px\">\n                <Text>{props.contents}</Text>\n              </Grid>\n            </Grid>\n          </React.Fragment>\n        )}\n\n        <Grid is_flex padding=\"16px\">\n          <Text margin=\"0px\" bold>\n            좋아요 {props.like_cnt}개\n          </Text>\n\n          {/* 좋아요 버튼은 위치만 잡아줄게요! */}\n          <HeartButton></HeartButton>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n});\n\nPost.defaultProps = {\n  id: null,\n  user_info: {\n    user_id: \"\",\n    user_name: \"\",\n    user_profile: \"\",\n  },\n  image_url: \"\",\n  contents: \"\",\n  like_cnt: 10,\n  layout_type: \"a\",\n  insert_dt: \"2021-02-27 10:00:00\",\n  is_me: false,\n};\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}